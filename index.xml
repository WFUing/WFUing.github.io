<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WFUing on WFUing&#39;s Blog</title>
    <link>https://WFUing.github.io/</link>
    <description>Recent content in WFUing on WFUing&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© 2024 WFUing</copyright>
    <lastBuildDate>Fri, 01 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://WFUing.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Open vSwitch</title>
      <link>https://WFUing.github.io/posts/architecture/virtualization/ovs/</link>
      <pubDate>Tue, 30 Apr 2024 08:11:01 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/virtualization/ovs/</guid>
      <description>Open vSwitch</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/virtualization/ovs/featured.png" />
    </item>
    
    <item>
      <title>在 Libvirt 和 KVM 上使用 Terraform 进行自动配置</title>
      <link>https://WFUing.github.io/posts/architecture/virtualization/terraform-libvirt-kvm/</link>
      <pubDate>Mon, 29 Apr 2024 12:11:01 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/virtualization/terraform-libvirt-kvm/</guid>
      <description>无论是公共云还是本地环境，当今的企业基础设施比以往任何时候都需要更多的自动化。幸运的是，Terraform 和 Ansible 等基础设施即代码 (IaC) 工具为这两者提供了解决方案。本文提供了一个场景，其中存在基于 KVM 的本地虚拟环境并利用 Terraform 进行自动配置。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/virtualization/terraform-libvirt-kvm/featured.png" />
    </item>
    
    <item>
      <title>Ray</title>
      <link>https://WFUing.github.io/posts/ai/ray/</link>
      <pubDate>Sat, 27 Apr 2024 10:25:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/ray/</guid>
      <description>Ray是一个开源项目，为构建分布式应用程序提供了简单、通用的 API。它广泛应用于机器学习和数据处理领域的扩展应用。Ray 因其能够以最少的代码更改将 Python 应用程序从单机扩展到大型集群而闻名。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/ray/featured.png" />
    </item>
    
    <item>
      <title>Debian</title>
      <link>https://WFUing.github.io/posts/reviews/os/debian/</link>
      <pubDate>Sat, 27 Apr 2024 09:43:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/os/debian/</guid>
      <description> Debian 与 Ubuntu：哪个 Linux 发行版最适合您？ Ubuntu 与 Debian：哪个更好？ </description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/os/debian/featured.png" />
    </item>
    
    <item>
      <title>Virtualization</title>
      <link>https://WFUing.github.io/posts/architecture/virtualization/overview/</link>
      <pubDate>Fri, 26 Apr 2024 18:11:01 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/virtualization/overview/</guid>
      <description>虚拟化是一个描述运行软件的广义计算机术语，通常体现为在单一系统上运行多个操作系统，这些操作系统同时运行，而每个操作系统又是相互独立的。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/virtualization/overview/featured.png" />
    </item>
    
    <item>
      <title>QEMU</title>
      <link>https://WFUing.github.io/posts/architecture/virtualization/qemu/</link>
      <pubDate>Fri, 26 Apr 2024 14:11:01 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/virtualization/qemu/</guid>
      <description>QEMU（快速模拟器）是一个免费的开源机器模拟器和虚拟器，可以在单个主机系统上运行各种客户操作系统和体系结构。与传统的虚拟化解决方案不同，QEMU 不仅仅是一个虚拟机管理程序；它是一个模拟器，可以在各种主机平台上运行客户操作系统。它是用于软件开发、测试和部署的强大工具。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/virtualization/qemu/featured.png" />
    </item>
    
    <item>
      <title>使用 KubeVirt 在 Kubernetes 中进行虚拟机编排</title>
      <link>https://WFUing.github.io/posts/architecture/virtualization/k8s/kubevirt/</link>
      <pubDate>Thu, 25 Apr 2024 14:11:01 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/virtualization/k8s/kubevirt/</guid>
      <description>使用 KubeVirt 在 Kubernetes 中进行虚拟机编排。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/virtualization/k8s/kubevirt/featured.png" />
    </item>
    
    <item>
      <title>k8s 安装</title>
      <link>https://WFUing.github.io/posts/architecture/virtualization/k8s/k8s_deployment/</link>
      <pubDate>Thu, 25 Apr 2024 12:11:01 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/virtualization/k8s/k8s_deployment/</guid>
      <description>k8s 安装过程</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/virtualization/k8s/k8s_deployment/featured.png" />
    </item>
    
    <item>
      <title>Beta分布</title>
      <link>https://WFUing.github.io/posts/ai/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/beta%E5%88%86%E5%B8%83/</link>
      <pubDate>Thu, 25 Apr 2024 09:25:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/beta%E5%88%86%E5%B8%83/</guid>
      <description>Beta分布是一个概率的概率分布。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/beta%E5%88%86%E5%B8%83/featured.png" />
    </item>
    
    <item>
      <title>二项分布</title>
      <link>https://WFUing.github.io/posts/ai/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BA%8C%E9%A1%B9%E5%88%86%E5%B8%83/</link>
      <pubDate>Wed, 24 Apr 2024 09:25:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BA%8C%E9%A1%B9%E5%88%86%E5%B8%83/</guid>
      <description>二项分布相关。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BA%8C%E9%A1%B9%E5%88%86%E5%B8%83/featured.png" />
    </item>
    
    <item>
      <title>什么是在线机器学习</title>
      <link>https://WFUing.github.io/posts/ai/online-ml/%E4%BB%80%E4%B9%88%E6%98%AF%E5%9C%A8%E7%BA%BF%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Tue, 23 Apr 2024 09:25:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/online-ml/%E4%BB%80%E4%B9%88%E6%98%AF%E5%9C%A8%E7%BA%BF%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</guid>
      <description>Online Learning是工业界比较常用的机器学习算法，在很多场景下都能有很好的效果。Online Learning并不是一种模型，而是一种模型的训练方法，Online Learning能够根据线上反馈数据，实时快速地进行模型调整，使得模型及时反映线上的变化，提高线上预测的准确率。Online Learning的流程包括：将模型的预测结果展现给用户，然后收集用户的反馈数据，再用来训练模型，形成闭环的系统。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/online-ml/%E4%BB%80%E4%B9%88%E6%98%AF%E5%9C%A8%E7%BA%BF%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/featured.png" />
    </item>
    
    <item>
      <title>蚂蚁金服笔试4.20</title>
      <link>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E9%98%BF%E9%87%8C%E7%B3%BB/%E8%9A%82%E8%9A%81/%E7%AC%94%E8%AF%954.20/</link>
      <pubDate>Sat, 20 Apr 2024 22:00:00 +0800</pubDate>
      
      <guid>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E9%98%BF%E9%87%8C%E7%B3%BB/%E8%9A%82%E8%9A%81/%E7%AC%94%E8%AF%954.20/</guid>
      <description>阿里的笔试有单选和多选，但是编程题给人的感觉不是很难。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E9%98%BF%E9%87%8C%E7%B3%BB/%E8%9A%82%E8%9A%81/%E7%AC%94%E8%AF%954.20/featured.png" />
    </item>
    
    <item>
      <title>高精度算法</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E9%AB%98%E7%B2%BE%E5%BA%A6%E7%AE%97%E6%B3%95/</link>
      <pubDate>Fri, 19 Apr 2024 12:51:58 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E9%AB%98%E7%B2%BE%E5%BA%A6%E7%AE%97%E6%B3%95/</guid>
      <description>高精度算法详情。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E9%AB%98%E7%B2%BE%E5%BA%A6%E7%AE%97%E6%B3%95/featured.png" />
    </item>
    
    <item>
      <title>MLflow 入门</title>
      <link>https://WFUing.github.io/posts/ai/ai-ci-cd/mlflow/</link>
      <pubDate>Tue, 16 Apr 2024 15:22:18 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/ai-ci-cd/mlflow/</guid>
      <description>运行教程指南 # Databricks：开始使用 MLflow 的最简单方法是使用 Databricks 提供的托管 MLflow 服务。这里有两个单独的选项，一个对于 Databricks 客户来说是最方便的，另一个是任何人都可以免费使用的。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/ai-ci-cd/mlflow/featured.png" />
    </item>
    
    <item>
      <title>全球的MLOps和ML工具概览</title>
      <link>https://WFUing.github.io/posts/ai/ai-ci-cd/%E5%85%A8%E7%90%83%E7%9A%84mlops%E5%92%8Cml%E5%B7%A5%E5%85%B7%E6%A6%82%E8%A7%88/</link>
      <pubDate>Tue, 16 Apr 2024 09:22:18 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/ai-ci-cd/%E5%85%A8%E7%90%83%E7%9A%84mlops%E5%92%8Cml%E5%B7%A5%E5%85%B7%E6%A6%82%E8%A7%88/</guid>
      <description>对于人工智能领域的任何人来说，MLOps 一词是解决所有问题的一个神奇词汇。 它结合了所有与机器学习相关的任务，从管理、处理和可视化数据、运行和跟踪实验，到将创建的模型投入到生产，理想情况下是大规模、合规和安全的。它定义了实施 ML 工作以创建基于AI的应用程序和服务的过程。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/ai-ci-cd/%E5%85%A8%E7%90%83%E7%9A%84mlops%E5%92%8Cml%E5%B7%A5%E5%85%B7%E6%A6%82%E8%A7%88/featured.png" />
    </item>
    
    <item>
      <title>MLOPS-ZOOMCAMP</title>
      <link>https://WFUing.github.io/posts/ai/ai-ci-cd/mlops-zoomcamp/</link>
      <pubDate>Tue, 16 Apr 2024 08:22:18 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/ai-ci-cd/mlops-zoomcamp/</guid>
      <description>第 1 周，简介和先决条件；第 2 周：实验跟踪和模型管理；第 3 周：编排和 ML 管道；第 4 周：模型部署；第 5 周：模型监控；第 6 周：最佳实践；第 7、8、9 周：项目。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/ai-ci-cd/mlops-zoomcamp/featured.png" />
    </item>
    
    <item>
      <title>MLOps: A Step Forward to Enterprise Machine Learning</title>
      <link>https://WFUing.github.io/posts/ai/ai-ci-cd/mloops/</link>
      <pubDate>Mon, 15 Apr 2024 16:22:18 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/ai-ci-cd/mloops/</guid>
      <description>机器学习运营 (MLOps) 正在成为寻求利用 AI 和 ML 模型优势的企业的一个非常重要的部分。这项研究详细回顾了 MLOps、其优点、困难、演变以及 MLOps 框架、Docker、GitHub actions 和 Kubernetes 等重要的底层技术。详细解释了 MLOps 工作流程，包括模型设计、部署和操作，以及模型和数据探索和部署所需的各种工具。本文还重点介绍了使用各种成熟度级别的自动化管道进行 ML 项目的端到端生产，其中至少完全没有自动化，最高的是具有完整的 CI/CD 和 CT 功能。此外，还使用用于对象检测服务的企业级 MLOps 项目的详细示例来解释该技术在现实场景中的工作流程。为此，托管来自 TensorFlow 2 Model Zoo 的预训练模型的 Web 应用程序被打包并部署到互联网，以确保系统可扩展、可靠并针对企业级部署进行优化。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/ai-ci-cd/mloops/featured.png" />
    </item>
    
    <item>
      <title>利用自动化技术促进模型训练</title>
      <link>https://WFUing.github.io/posts/ai/ai-ci-cd/%E5%88%A9%E7%94%A8%E8%87%AA%E5%8A%A8%E5%8C%96%E6%8A%80%E6%9C%AF%E4%BF%83%E8%BF%9B%E6%A8%A1%E5%9E%8B%E8%AE%AD%E7%BB%83/</link>
      <pubDate>Sun, 14 Apr 2024 20:22:18 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/ai-ci-cd/%E5%88%A9%E7%94%A8%E8%87%AA%E5%8A%A8%E5%8C%96%E6%8A%80%E6%9C%AF%E4%BF%83%E8%BF%9B%E6%A8%A1%E5%9E%8B%E8%AE%AD%E7%BB%83/</guid>
      <description>自动化人工智能（AI）模型训练已成为自动化领域的一项重大挑战。从原始数据到模型部署的完整管道需要定义强大的流程，以确保公开模型的服务的效率。本文介绍了一种通用架构，用于使用 Microsoft Azure 机器学习 (AzureML) CI/CD 工具自动执行数据准备、模型训练、模型选择以及将模型部署为 Web 服务以供第三方使用。我们利用带有预定义和自定义模块的 AzureML 管道进行了实际实验，证明了它可以集成到任何生产应用程序中。我们还成功地将这种架构集成到专为工业预测而设计的实际产品中。这一实际实施证明了我们方法的有效性和适应性，表明其满足不同培训需求的潜力。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/ai-ci-cd/%E5%88%A9%E7%94%A8%E8%87%AA%E5%8A%A8%E5%8C%96%E6%8A%80%E6%9C%AF%E4%BF%83%E8%BF%9B%E6%A8%A1%E5%9E%8B%E8%AE%AD%E7%BB%83/featured.png" />
    </item>
    
    <item>
      <title>智能维护推荐系统</title>
      <link>https://WFUing.github.io/posts/devoops/%E6%99%BA%E8%83%BD%E8%BF%90%E7%BB%B4/%E6%99%BA%E8%83%BD%E7%BB%B4%E6%8A%A4%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sun, 14 Apr 2024 19:22:18 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/devoops/%E6%99%BA%E8%83%BD%E8%BF%90%E7%BB%B4/%E6%99%BA%E8%83%BD%E7%BB%B4%E6%8A%A4%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/</guid>
      <description>推荐引擎的技术已经在亚马逊、Netflix等不同领域证明了其性能。本文讨论了推荐引擎概念在工业领域，特别是在维护操作中的使用。如今，工厂维护团队需要针对突然的资产故障制定维护计划，以减少计划外的生产停机。然而，规划需要花费大量时间，因为根据故障情况和资产环境，需要从许多选项中选择适当的维护对策。因此，我们尝试针对故障情况提出可靠的对策，以缩短规划时间。在这项工作中，我们提出了两种基于人工智能技术的维护推荐系统方法来推荐维护操作。第一种方法是单级推荐系统，它读取操作员输入的缺陷信息及其描述，以针对历史数据中发现的类似缺陷推荐维护操作。第二种方法是多阶段推荐系统，其中系统首先估计一个维护属性，该属性用作下一阶段的输入来估计下一个维护属性。最后，我们将使用过去的维护报告来评估建议的准确性，该报告包含缺陷情况和过去实际采取的维护措施。我们发现多级系统在准确性方面优于单级系统，并且多级系统可能通过维护行动建议帮助维护团队应对突发资产故障。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/devoops/%E6%99%BA%E8%83%BD%E8%BF%90%E7%BB%B4/%E6%99%BA%E8%83%BD%E7%BB%B4%E6%8A%A4%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/featured.png" />
    </item>
    
    <item>
      <title>企业IT智能运维管理方法研究</title>
      <link>https://WFUing.github.io/posts/devoops/%E6%99%BA%E8%83%BD%E8%BF%90%E7%BB%B4/%E4%BC%81%E4%B8%9Ait%E6%99%BA%E8%83%BD%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86%E6%96%B9%E6%B3%95%E7%A0%94%E7%A9%B6/</link>
      <pubDate>Sun, 14 Apr 2024 17:22:18 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/devoops/%E6%99%BA%E8%83%BD%E8%BF%90%E7%BB%B4/%E4%BC%81%E4%B8%9Ait%E6%99%BA%E8%83%BD%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86%E6%96%B9%E6%B3%95%E7%A0%94%E7%A9%B6/</guid>
      <description>随着人工智能技术对各行各业的影响逐渐加深，企业IT运维管理也正在向更加智能化、先进的方向发生变化。为了改变企业IT运维管理方法单一、手段匮乏等实际问题，本文对企业IT智能运维管理技术的整体框架进行了分析研究，深入剖析了企业IT智能运维管理技术的关键智能化方法。故障预测、故障分析、运维调度等运维管理，为有效提升企业IT智能化运维水平和系统保障能力提供支撑。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/devoops/%E6%99%BA%E8%83%BD%E8%BF%90%E7%BB%B4/%E4%BC%81%E4%B8%9Ait%E6%99%BA%E8%83%BD%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86%E6%96%B9%E6%B3%95%E7%A0%94%E7%A9%B6/featured.png" />
    </item>
    
    <item>
      <title>推荐与广告计算 | 多目标优化介绍</title>
      <link>https://WFUing.github.io/posts/ai/%E5%9B%BE%E8%A7%A3%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%8E%A8%E8%8D%90%E4%B8%8E%E5%B9%BF%E5%91%8A%E8%AE%A1%E7%AE%97/%E5%A4%9A%E7%9B%AE%E6%A0%87%E4%BC%98%E5%8C%96%E5%8F%8A%E5%BA%94%E7%94%A8/</link>
      <pubDate>Sun, 14 Apr 2024 09:25:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/%E5%9B%BE%E8%A7%A3%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%8E%A8%E8%8D%90%E4%B8%8E%E5%B9%BF%E5%91%8A%E8%AE%A1%E7%AE%97/%E5%A4%9A%E7%9B%AE%E6%A0%87%E4%BC%98%E5%8C%96%E5%8F%8A%E5%BA%94%E7%94%A8/</guid>
      <description>多目标排序是推荐排序系统中常见的技术实现，在很多推荐与排序常见中，有多个业务目标，找到一种综合排序方法使得多个目标都达到整体最优，能有最好的总体收益。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/%E5%9B%BE%E8%A7%A3%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%8E%A8%E8%8D%90%E4%B8%8E%E5%B9%BF%E5%91%8A%E8%AE%A1%E7%AE%97/%E5%A4%9A%E7%9B%AE%E6%A0%87%E4%BC%98%E5%8C%96%E5%8F%8A%E5%BA%94%E7%94%A8/featured.png" />
    </item>
    
    <item>
      <title>图解机器学习 | 机器学习基础知识</title>
      <link>https://WFUing.github.io/posts/ai/%E5%9B%BE%E8%A7%A3%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0%E6%96%B9%E6%B3%95%E4%B8%8E%E5%87%86%E5%88%99/</link>
      <pubDate>Sat, 13 Apr 2024 13:25:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/%E5%9B%BE%E8%A7%A3%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0%E6%96%B9%E6%B3%95%E4%B8%8E%E5%87%86%E5%88%99/</guid>
      <description>在机器学习领域，对模型的测量和评估至关重要。选择与问题相匹配的评估方法，能帮助我们快速准确地发现在模型选择和训练过程中出现的问题，进而对模型进行优化和迭代。本文我们系统地讲解一下机器学习模型评估相关知识。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/%E5%9B%BE%E8%A7%A3%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0%E6%96%B9%E6%B3%95%E4%B8%8E%E5%87%86%E5%88%99/featured.png" />
    </item>
    
    <item>
      <title>图解机器学习 | 机器学习基础知识</title>
      <link>https://WFUing.github.io/posts/ai/%E5%9B%BE%E8%A7%A3%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Sat, 13 Apr 2024 09:25:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/%E5%9B%BE%E8%A7%A3%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>&lt;strong&gt;机器学习&lt;/strong&gt;（Machine learning）是人工智能的子集，是实现人工智能的一种途径，但并不是唯一的途径。它是一门专门研究计算机怎样模拟或实现人类的学习行为，以获取新的知识或技能，重新组织已有的知识结构使之不断改善自身的性能的学科。大概在上世纪80年代开始蓬勃发展，诞生了一大批数学统计相关的机器学习模型。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/%E5%9B%BE%E8%A7%A3%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/featured.png" />
    </item>
    
    <item>
      <title>蓄水池抽样算法（Reservoir Sampling）</title>
      <link>https://WFUing.github.io/posts/reviews/knowledge/%E8%93%84%E6%B0%B4%E6%B1%A0%E6%8A%BD%E6%A0%B7%E7%AE%97%E6%B3%95/</link>
      <pubDate>Fri, 12 Apr 2024 13:53:28 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/knowledge/%E8%93%84%E6%B0%B4%E6%B1%A0%E6%8A%BD%E6%A0%B7%E7%AE%97%E6%B3%95/</guid>
      <description>我是在一次失败的面试经历中听说蓄水池算法的。之后上网搜了搜，知道是一个数据抽样算法，寥寥几行，却暗藏玄机。主要用来解决如下问题。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/knowledge/%E8%93%84%E6%B0%B4%E6%B1%A0%E6%8A%BD%E6%A0%B7%E7%AE%97%E6%B3%95/featured.png" />
    </item>
    
    <item>
      <title>全民k歌二面4.20</title>
      <link>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E8%85%BE%E8%AE%AF/%E5%85%A8%E6%B0%91k%E6%AD%8C%E4%BA%8C%E9%9D%A24.20/</link>
      <pubDate>Thu, 11 Apr 2024 20:00:00 +0800</pubDate>
      
      <guid>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E8%85%BE%E8%AE%AF/%E5%85%A8%E6%B0%91k%E6%AD%8C%E4%BA%8C%E9%9D%A24.20/</guid>
      <description>全民k歌的面试官很尖锐</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E8%85%BE%E8%AE%AF/%E5%85%A8%E6%B0%91k%E6%AD%8C%E4%BA%8C%E9%9D%A24.20/featured.png" />
    </item>
    
    <item>
      <title>电网项目调研部署工具</title>
      <link>https://WFUing.github.io/posts/reviews/knowledge/%E9%83%A8%E7%BD%B2%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Thu, 11 Apr 2024 13:53:28 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/knowledge/%E9%83%A8%E7%BD%B2%E5%B7%A5%E5%85%B7/</guid>
      <description>电网项目调研部署工具</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/knowledge/%E9%83%A8%E7%BD%B2%E5%B7%A5%E5%85%B7/featured.png" />
    </item>
    
    <item>
      <title>真正靠谱的人，事不拖、话不多、人不作</title>
      <link>https://WFUing.github.io/read/%E9%9D%A0%E8%B0%B1%E4%B8%89%E8%A6%81%E7%B4%A0/</link>
      <pubDate>Thu, 11 Apr 2024 13:16:22 +0800</pubDate>
      
      <guid>https://WFUing.github.io/read/%E9%9D%A0%E8%B0%B1%E4%B8%89%E8%A6%81%E7%B4%A0/</guid>
      <description>昨天，跟着导师去对接的公司开了项目会，导师跟对面公司的对接人说，你还需要学，你最好去查查靠谱三要素是啥？说者无心，听者有意。靠谱三要素是啥呢？真正靠谱的人，事不拖、话不多、人不作。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/read/%E9%9D%A0%E8%B0%B1%E4%B8%89%E8%A6%81%E7%B4%A0/featured.png" />
    </item>
    
    <item>
      <title>华为笔试4.10</title>
      <link>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E5%8D%8E%E4%B8%BA/%E5%8D%8E%E4%B8%BA4.10%E7%AC%94%E8%AF%95/</link>
      <pubDate>Wed, 10 Apr 2024 22:00:00 +0800</pubDate>
      
      <guid>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E5%8D%8E%E4%B8%BA/%E5%8D%8E%E4%B8%BA4.10%E7%AC%94%E8%AF%95/</guid>
      <description>华为笔试4.10</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E5%8D%8E%E4%B8%BA/%E5%8D%8E%E4%B8%BA4.10%E7%AC%94%E8%AF%95/featured.png" />
    </item>
    
    <item>
      <title>高并发架构学习笔记</title>
      <link>https://WFUing.github.io/posts/architecture/%E9%AB%98%E5%B9%B6%E5%8F%91/</link>
      <pubDate>Wed, 10 Apr 2024 10:53:28 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/%E9%AB%98%E5%B9%B6%E5%8F%91/</guid>
      <description>慎入，高并发的水太深，什么高并发，大流量的东西都是虚拟的，笔者还太年轻，没有那个经历，把握不住。系统最大只搞过几千QPS，开心快乐就行，不PK，文明PK。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/%E9%AB%98%E5%B9%B6%E5%8F%91/featured.png" />
    </item>
    
    <item>
      <title>Java常用算法技巧总结</title>
      <link>https://WFUing.github.io/algorithm/</link>
      <pubDate>Mon, 08 Apr 2024 17:05:17 +0800</pubDate>
      
      <guid>https://WFUing.github.io/algorithm/</guid>
      <description>Java常用算法技巧总结</description>
      
    </item>
    
    <item>
      <title>vorto tango</title>
      <link>https://WFUing.github.io/posts/architecture/iot/vorto-tango/</link>
      <pubDate>Sun, 07 Apr 2024 10:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iot/vorto-tango/</guid>
      <description>用vorto刻画tango</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iot/vorto-tango/featured.png" />
    </item>
    
    <item>
      <title>ai面经</title>
      <link>https://WFUing.github.io/posts/reviews/knowledge/ai%E9%9D%A2%E7%BB%8F/</link>
      <pubDate>Fri, 05 Apr 2024 13:53:28 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/knowledge/ai%E9%9D%A2%E7%BB%8F/</guid>
      <description>很想转ai岗，从面经学一下ai的知识</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/knowledge/ai%E9%9D%A2%E7%BB%8F/featured.jpeg" />
    </item>
    
    <item>
      <title>golang协程调度器原理与GMP设计思想</title>
      <link>https://WFUing.github.io/posts/reviews/knowledge/golang%E5%8D%8F%E7%A8%8B%E8%B0%83%E5%BA%A6%E5%99%A8%E5%8E%9F%E7%90%86%E4%B8%8Egmp%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3/</link>
      <pubDate>Thu, 04 Apr 2024 13:53:28 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/knowledge/golang%E5%8D%8F%E7%A8%8B%E8%B0%83%E5%BA%A6%E5%99%A8%E5%8E%9F%E7%90%86%E4%B8%8Egmp%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3/</guid>
      <description>掌握Golang协程调度器原理：为什么Go的协程的调度是快的。1.Golang调度器的由来；2. Goroutine调度器的GMP模型的设计思想；3. Go调度器GMP调度场景的全过程分析。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/knowledge/golang%E5%8D%8F%E7%A8%8B%E8%B0%83%E5%BA%A6%E5%99%A8%E5%8E%9F%E7%90%86%E4%B8%8Egmp%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3/featured.png" />
    </item>
    
    <item>
      <title>如何处理高并发请求</title>
      <link>https://WFUing.github.io/posts/reviews/knowledge/%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86%E9%AB%98%E5%B9%B6%E5%8F%91%E8%AF%B7%E6%B1%82/</link>
      <pubDate>Thu, 04 Apr 2024 13:53:28 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/knowledge/%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86%E9%AB%98%E5%B9%B6%E5%8F%91%E8%AF%B7%E6%B1%82/</guid>
      <description>如何处理高并发请求</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/knowledge/%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86%E9%AB%98%E5%B9%B6%E5%8F%91%E8%AF%B7%E6%B1%82/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 139】单词拆分</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-139%E5%8D%95%E8%AF%8D%E6%8B%86%E5%88%86/</link>
      <pubDate>Wed, 03 Apr 2024 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-139%E5%8D%95%E8%AF%8D%E6%8B%86%E5%88%86/</guid>
      <description>【LeetCode 139】单词拆分题解。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-139%E5%8D%95%E8%AF%8D%E6%8B%86%E5%88%86/featured.png" />
    </item>
    
    <item>
      <title>数据库分库分表</title>
      <link>https://WFUing.github.io/posts/reviews/knowledge/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/</link>
      <pubDate>Wed, 03 Apr 2024 13:53:28 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/knowledge/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/</guid>
      <description>数据库分库分表相关</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/knowledge/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/featured.png" />
    </item>
    
    <item>
      <title>云深处一面4.2</title>
      <link>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E4%BA%91%E6%B7%B1%E5%A4%84/</link>
      <pubDate>Tue, 02 Apr 2024 21:00:00 +0800</pubDate>
      
      <guid>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E4%BA%91%E6%B7%B1%E5%A4%84/</guid>
      <description>云深处一面，跟大厂比，小厂的面试就有些个水，也没拷打八股，更多的是面试官在介绍他们的项目。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E4%BA%91%E6%B7%B1%E5%A4%84/featured.png" />
    </item>
    
    <item>
      <title>PyTango-DeviceProxy</title>
      <link>https://WFUing.github.io/posts/architecture/iot/corba/pytango-deviceproxy/</link>
      <pubDate>Sun, 31 Mar 2024 07:05:13 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iot/corba/pytango-deviceproxy/</guid>
      <description>在PyTango中，DeviceProxy是一个核心类，用于表示和操作Tango设备的客户端代理。这个类封装了与Tango设备通信的所有细节，包括网络通信、命令执行、属性读写、事件订阅等。DeviceProxy的实现隐藏了底层的CORBA细节，提供了一种简洁的方式来与Tango设备进行交互。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iot/corba/pytango-deviceproxy/featured.png" />
    </item>
    
    <item>
      <title>CORBA-IOR</title>
      <link>https://WFUing.github.io/posts/architecture/iot/corba/ior/</link>
      <pubDate>Sat, 30 Mar 2024 15:05:13 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iot/corba/ior/</guid>
      <description>IOR（Interoperable Object Reference）是CORBA中的标准格式，用于唯一标识远程对象，允许跨平台通信。IOR包含对象的位置、类型和通信协议等信息，确保在不同系统之间的对象交互和通信的互操作性。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iot/corba/ior/featured.png" />
    </item>
    
    <item>
      <title>LCR 026. 重排链表</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E9%93%BE%E8%A1%A8/lcr-026.-%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Mon, 25 Mar 2024 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E9%93%BE%E8%A1%A8/lcr-026.-%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8/</guid>
      <description>LCR 026. 重排链表题解。链表的题目很早刷过，现在有些生疏了，再回顾一遍。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E9%93%BE%E8%A1%A8/lcr-026.-%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8/featured.png" />
    </item>
    
    <item>
      <title>饿了么笔试3.24</title>
      <link>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E9%98%BF%E9%87%8C%E7%B3%BB/%E9%A5%BF%E4%BA%86%E4%B9%88/%E7%AC%94%E8%AF%953.24/</link>
      <pubDate>Sun, 24 Mar 2024 22:00:00 +0800</pubDate>
      
      <guid>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E9%98%BF%E9%87%8C%E7%B3%BB/%E9%A5%BF%E4%BA%86%E4%B9%88/%E7%AC%94%E8%AF%953.24/</guid>
      <description>过去好久好久了，但是那次笔试做的稀烂，只做出来半道多题目。饿了么在牛客也不开放题源，不像美团那么大方，扣扣搜搜的。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E9%98%BF%E9%87%8C%E7%B3%BB/%E9%A5%BF%E4%BA%86%E4%B9%88/%E7%AC%94%E8%AF%953.24/featured.png" />
    </item>
    
    <item>
      <title>MESI协议</title>
      <link>https://WFUing.github.io/posts/reviews/os/mesi/</link>
      <pubDate>Sun, 24 Mar 2024 14:43:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/os/mesi/</guid>
      <description>https://xiaolincoding.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/os/mesi/featured.png" />
    </item>
    
    <item>
      <title>Tango Controls Architecture</title>
      <link>https://WFUing.github.io/posts/architecture/iot/tango/tango-arch/</link>
      <pubDate>Sun, 24 Mar 2024 08:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iot/tango/tango-arch/</guid>
      <description>Tango Controls 是一个面向对象的分布式控制系统框架，它定义了通信协议、应用程序程序员接口 (API)，并提供了一组工具和库来构建控制系统软件。它是围绕设备和设备类别的概念构建的。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iot/tango/tango-arch/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 167】两数之和 II - 输入有序数组</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/leetcode-167%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C-ii---%E8%BE%93%E5%85%A5%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</link>
      <pubDate>Sat, 23 Mar 2024 20:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/leetcode-167%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C-ii---%E8%BE%93%E5%85%A5%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</guid>
      <description>【LeetCode 167】两数之和 II - 输入有序数组题解。二分查找板子题</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/leetcode-167%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C-ii---%E8%BE%93%E5%85%A5%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 3】无重复字符的最长子串</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/leetcode-3%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</link>
      <pubDate>Sat, 23 Mar 2024 20:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/leetcode-3%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</guid>
      <description>【LeetCode 3】无重复字符的最长子串题解。滑动窗口板子题。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/leetcode-3%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 39】组合总和</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%9B%9E%E6%BA%AF/leetcode-39%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C/</link>
      <pubDate>Sat, 23 Mar 2024 19:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%9B%9E%E6%BA%AF/leetcode-39%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C/</guid>
      <description>【LeetCode 39】组合总和题解。回溯算法板子题。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%9B%9E%E6%BA%AF/leetcode-39%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 17】电话号码的字母组合</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%9B%9E%E6%BA%AF/leetcode-77%E7%BB%84%E5%90%88/</link>
      <pubDate>Sat, 23 Mar 2024 18:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%9B%9E%E6%BA%AF/leetcode-77%E7%BB%84%E5%90%88/</guid>
      <description>【LeetCode 17】电话号码的字母组合题解。回溯算法板子题。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%9B%9E%E6%BA%AF/leetcode-77%E7%BB%84%E5%90%88/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 300】最长递增子序列</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-300%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/</link>
      <pubDate>Sat, 23 Mar 2024 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-300%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/</guid>
      <description>【LeetCode 300】最长递增子序列题解。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-300%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 208】实现 Trie (前缀树)</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%AD%97%E5%85%B8%E6%A0%91%E5%89%8D%E7%BC%80%E6%A0%91/leetcode-208%E5%AE%9E%E7%8E%B0-trie-%E5%89%8D%E7%BC%80%E6%A0%91/</link>
      <pubDate>Fri, 22 Mar 2024 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%AD%97%E5%85%B8%E6%A0%91%E5%89%8D%E7%BC%80%E6%A0%91/leetcode-208%E5%AE%9E%E7%8E%B0-trie-%E5%89%8D%E7%BC%80%E6%A0%91/</guid>
      <description>【LeetCode 208】实现 Trie (前缀树)题解。前缀树板子题。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%AD%97%E5%85%B8%E6%A0%91%E5%89%8D%E7%BC%80%E6%A0%91/leetcode-208%E5%AE%9E%E7%8E%B0-trie-%E5%89%8D%E7%BC%80%E6%A0%91/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 211】添加与搜索单词 - 数据结构设计</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%AD%97%E5%85%B8%E6%A0%91%E5%89%8D%E7%BC%80%E6%A0%91/leetcode-211%E6%B7%BB%E5%8A%A0%E4%B8%8E%E6%90%9C%E7%B4%A2%E5%8D%95%E8%AF%8D---%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Fri, 22 Mar 2024 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%AD%97%E5%85%B8%E6%A0%91%E5%89%8D%E7%BC%80%E6%A0%91/leetcode-211%E6%B7%BB%E5%8A%A0%E4%B8%8E%E6%90%9C%E7%B4%A2%E5%8D%95%E8%AF%8D---%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/</guid>
      <description>【LeetCode 211】添加与搜索单词 - 数据结构设计题解。前缀树板子题。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%AD%97%E5%85%B8%E6%A0%91%E5%89%8D%E7%BC%80%E6%A0%91/leetcode-211%E6%B7%BB%E5%8A%A0%E4%B8%8E%E6%90%9C%E7%B4%A2%E5%8D%95%E8%AF%8D---%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 17】电话号码的字母组合</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%9B%9E%E6%BA%AF/leetcode-17%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88/</link>
      <pubDate>Thu, 21 Mar 2024 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%9B%9E%E6%BA%AF/leetcode-17%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88/</guid>
      <description>【LeetCode 17】电话号码的字母组合题解。回溯算法板子题。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%9B%9E%E6%BA%AF/leetcode-17%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88/featured.png" />
    </item>
    
    <item>
      <title>前后端请求加载流程</title>
      <link>https://WFUing.github.io/posts/reviews/knowledge/%E5%89%8D%E5%90%8E%E7%AB%AF%E8%AF%B7%E6%B1%82%E5%8A%A0%E8%BD%BD%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Mon, 18 Mar 2024 13:53:28 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/knowledge/%E5%89%8D%E5%90%8E%E7%AB%AF%E8%AF%B7%E6%B1%82%E5%8A%A0%E8%BD%BD%E6%B5%81%E7%A8%8B/</guid>
      <description>前后端请求加载流程是前端与后端交互的基础，确保数据能够在客户端与服务器之间有效、安全地传输。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/knowledge/%E5%89%8D%E5%90%8E%E7%AB%AF%E8%AF%B7%E6%B1%82%E5%8A%A0%E8%BD%BD%E6%B5%81%E7%A8%8B/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 289】生命游戏</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-289%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/</link>
      <pubDate>Fri, 15 Mar 2024 10:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-289%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/</guid>
      <description>【LeetCode 289】生命游戏题解。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-289%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 6】Z 字形变换</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-6z-%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</link>
      <pubDate>Fri, 15 Mar 2024 10:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-6z-%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</guid>
      <description>【LeetCode 6】Z 字形变换题解。参考这个优美的代码解法，并且复习下String的内容。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-6z-%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/featured.png" />
    </item>
    
    <item>
      <title>Socket 编程</title>
      <link>https://WFUing.github.io/posts/reviews/network/socket/</link>
      <pubDate>Thu, 14 Mar 2024 13:19:27 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/network/socket/</guid>
      <description>Socket编程是一种用于网络通信的编程技术，允许计算机之间通过网络进行数据交换。它基于套接字（socket）接口，实现了客户端和服务器之间的通信，支持TCP和UDP协议。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/network/socket/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 134】加油站</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-134%E5%8A%A0%E6%B2%B9%E7%AB%99/</link>
      <pubDate>Wed, 13 Mar 2024 10:17:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-134%E5%8A%A0%E6%B2%B9%E7%AB%99/</guid>
      <description>【LeetCode 134】加油站题解。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-134%E5%8A%A0%E6%B2%B9%E7%AB%99/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 274】H指数</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-274h%E6%8C%87%E6%95%B0/</link>
      <pubDate>Wed, 13 Mar 2024 10:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-274h%E6%8C%87%E6%95%B0/</guid>
      <description>【LeetCode 274】H指数题解。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-274h%E6%8C%87%E6%95%B0/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 54】螺旋矩阵</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-54%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/</link>
      <pubDate>Wed, 13 Mar 2024 10:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-54%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/</guid>
      <description>【LeetCode 54】螺旋矩阵题解。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-54%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 189】轮转数组</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-189%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/</link>
      <pubDate>Tue, 12 Mar 2024 10:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-189%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/</guid>
      <description>【LeetCode 189】轮转数组题解。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-189%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/featured.png" />
    </item>
    
    <item>
      <title>进程间通讯</title>
      <link>https://WFUing.github.io/posts/reviews/os/%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E8%AE%AF/</link>
      <pubDate>Mon, 11 Mar 2024 19:07:16 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/os/%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E8%AE%AF/</guid>
      <description>进程间通讯指不同进程之间交换数据或信息的过程。常用方法包括管道、共享内存、消息队列和套接字等。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/os/%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E8%AE%AF/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 45】跳跃游戏 II</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-45%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F-ii/</link>
      <pubDate>Mon, 11 Mar 2024 10:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-45%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F-ii/</guid>
      <description>【LeetCode 45】跳跃游戏 II题解。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-45%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F-ii/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 80】删除有序数组中的重复项</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-80%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/</link>
      <pubDate>Mon, 11 Mar 2024 10:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-80%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/</guid>
      <description>【LeetCode 80】删除有序数组中的重复项题解。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84/leetcode-80%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/featured.png" />
    </item>
    
    <item>
      <title>进程与线程的基本知识</title>
      <link>https://WFUing.github.io/posts/reviews/os/%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/</link>
      <pubDate>Mon, 11 Mar 2024 10:07:16 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/os/%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/</guid>
      <description>进程与线程的基本知识</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/os/%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/featured.png" />
    </item>
    
    <item>
      <title>分布式事务</title>
      <link>https://WFUing.github.io/posts/architecture/distributed/transaction/</link>
      <pubDate>Sun, 10 Mar 2024 19:07:16 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/distributed/transaction/</guid>
      <description>事务的多个参与者分布在不同的地方。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/distributed/transaction/featured.png" />
    </item>
    
    <item>
      <title>TANGO idl definition</title>
      <link>https://WFUing.github.io/posts/architecture/iot/tango/tango-idl/</link>
      <pubDate>Sun, 10 Mar 2024 10:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iot/tango/tango-idl/</guid>
      <description>TANGO 的主要目标是将设备视为具有方法和数据的网络对象，使它们成为真正的 C++/Java 对象，可以像本地一样进行实例化和远程访问。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iot/tango/tango-idl/featured.png" />
    </item>
    
    <item>
      <title>适合 Ubuntu的8款最佳录屏软件</title>
      <link>https://WFUing.github.io/posts/reviews/os/%E9%80%82%E5%90%88-ubuntu%E7%9A%848%E6%AC%BE%E6%9C%80%E4%BD%B3%E5%BD%95%E5%B1%8F%E8%BD%AF%E4%BB%B6/</link>
      <pubDate>Sun, 10 Mar 2024 10:07:16 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/os/%E9%80%82%E5%90%88-ubuntu%E7%9A%848%E6%AC%BE%E6%9C%80%E4%BD%B3%E5%BD%95%E5%B1%8F%E8%BD%AF%E4%BB%B6/</guid>
      <description>适合 Ubuntu的8款最佳录屏软件</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/os/%E9%80%82%E5%90%88-ubuntu%E7%9A%848%E6%AC%BE%E6%9C%80%E4%BD%B3%E5%BD%95%E5%B1%8F%E8%BD%AF%E4%BB%B6/featured.png" />
    </item>
    
    <item>
      <title>美团2024届春招笔试第一场编程真题</title>
      <link>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E7%BE%8E%E5%9B%A2/%E7%AC%94%E8%AF%95/%E7%BE%8E%E5%9B%A22024%E5%B1%8A%E6%98%A5%E6%8B%9B%E7%AC%94%E8%AF%95%E7%AC%AC%E4%B8%80%E5%9C%BA%E7%BC%96%E7%A8%8B%E7%9C%9F%E9%A2%98/</link>
      <pubDate>Sat, 09 Mar 2024 13:43:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E7%BE%8E%E5%9B%A2/%E7%AC%94%E8%AF%95/%E7%BE%8E%E5%9B%A22024%E5%B1%8A%E6%98%A5%E6%8B%9B%E7%AC%94%E8%AF%95%E7%AC%AC%E4%B8%80%E5%9C%BA%E7%BC%96%E7%A8%8B%E7%9C%9F%E9%A2%98/</guid>
      <description>第一场自己做的笔试，前三题感觉很水，半小时搞定了。后两题挺难的。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E7%BE%8E%E5%9B%A2/%E7%AC%94%E8%AF%95/%E7%BE%8E%E5%9B%A22024%E5%B1%8A%E6%98%A5%E6%8B%9B%E7%AC%94%E8%AF%95%E7%AC%AC%E4%B8%80%E5%9C%BA%E7%BC%96%E7%A8%8B%E7%9C%9F%E9%A2%98/featured.png" />
    </item>
    
    <item>
      <title>美团2024届秋招笔试第三场编程真题</title>
      <link>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E7%BE%8E%E5%9B%A2/%E7%AC%94%E8%AF%95/%E7%BE%8E%E5%9B%A22024%E5%B1%8A%E7%A7%8B%E6%8B%9B%E7%AC%94%E8%AF%95%E7%AC%AC%E4%B8%89%E5%9C%BA%E7%BC%96%E7%A8%8B%E7%9C%9F%E9%A2%98/</link>
      <pubDate>Fri, 08 Mar 2024 19:43:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E7%BE%8E%E5%9B%A2/%E7%AC%94%E8%AF%95/%E7%BE%8E%E5%9B%A22024%E5%B1%8A%E7%A7%8B%E6%8B%9B%E7%AC%94%E8%AF%95%E7%AC%AC%E4%B8%89%E5%9C%BA%E7%BC%96%E7%A8%8B%E7%9C%9F%E9%A2%98/</guid>
      <description>这次的笔试，还是有些难度的，但是水题也多。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E7%BE%8E%E5%9B%A2/%E7%AC%94%E8%AF%95/%E7%BE%8E%E5%9B%A22024%E5%B1%8A%E7%A7%8B%E6%8B%9B%E7%AC%94%E8%AF%95%E7%AC%AC%E4%B8%89%E5%9C%BA%E7%BC%96%E7%A8%8B%E7%9C%9F%E9%A2%98/featured.png" />
    </item>
    
    <item>
      <title>暑期实习投递时间线</title>
      <link>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/timeline/</link>
      <pubDate>Fri, 08 Mar 2024 08:00:00 +0800</pubDate>
      
      <guid>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/timeline/</guid>
      <description>暑期实习投递时间线</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/timeline/featured.png" />
    </item>
    
    <item>
      <title>美团2024届秋招笔试第二场编程真题</title>
      <link>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E7%BE%8E%E5%9B%A2/%E7%AC%94%E8%AF%95/%E7%BE%8E%E5%9B%A22024%E5%B1%8A%E7%A7%8B%E6%8B%9B%E7%AC%94%E8%AF%95%E7%AC%AC%E4%BA%8C%E5%9C%BA%E7%BC%96%E7%A8%8B%E7%9C%9F%E9%A2%98/</link>
      <pubDate>Wed, 06 Mar 2024 19:43:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E7%BE%8E%E5%9B%A2/%E7%AC%94%E8%AF%95/%E7%BE%8E%E5%9B%A22024%E5%B1%8A%E7%A7%8B%E6%8B%9B%E7%AC%94%E8%AF%95%E7%AC%AC%E4%BA%8C%E5%9C%BA%E7%BC%96%E7%A8%8B%E7%9C%9F%E9%A2%98/</guid>
      <description>这次的笔试，比第一场难。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E7%BE%8E%E5%9B%A2/%E7%AC%94%E8%AF%95/%E7%BE%8E%E5%9B%A22024%E5%B1%8A%E7%A7%8B%E6%8B%9B%E7%AC%94%E8%AF%95%E7%AC%AC%E4%BA%8C%E5%9C%BA%E7%BC%96%E7%A8%8B%E7%9C%9F%E9%A2%98/featured.png" />
    </item>
    
    <item>
      <title>美团2024届秋招笔试第一场编程真题</title>
      <link>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E7%BE%8E%E5%9B%A2/%E7%AC%94%E8%AF%95/%E7%BE%8E%E5%9B%A22024%E5%B1%8A%E7%A7%8B%E6%8B%9B%E7%AC%94%E8%AF%95%E7%AC%AC%E4%B8%80%E5%9C%BA%E7%BC%96%E7%A8%8B%E7%9C%9F%E9%A2%98/</link>
      <pubDate>Tue, 05 Mar 2024 19:43:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E7%BE%8E%E5%9B%A2/%E7%AC%94%E8%AF%95/%E7%BE%8E%E5%9B%A22024%E5%B1%8A%E7%A7%8B%E6%8B%9B%E7%AC%94%E8%AF%95%E7%AC%AC%E4%B8%80%E5%9C%BA%E7%BC%96%E7%A8%8B%E7%9C%9F%E9%A2%98/</guid>
      <description>这次的笔试，很多签到题，没什么难度，主要是第七题和第九题，比较有难度。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/%E5%AE%9E%E4%B9%A0%E6%8A%95%E9%80%92%E8%BF%87%E7%A8%8B/%E7%BE%8E%E5%9B%A2/%E7%AC%94%E8%AF%95/%E7%BE%8E%E5%9B%A22024%E5%B1%8A%E7%A7%8B%E6%8B%9B%E7%AC%94%E8%AF%95%E7%AC%AC%E4%B8%80%E5%9C%BA%E7%BC%96%E7%A8%8B%E7%9C%9F%E9%A2%98/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 684】冗余连接</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%B9%B6%E6%9F%A5%E9%9B%86/leetcode-684%E5%86%97%E4%BD%99%E8%BF%9E%E6%8E%A5/</link>
      <pubDate>Sun, 03 Mar 2024 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%B9%B6%E6%9F%A5%E9%9B%86/leetcode-684%E5%86%97%E4%BD%99%E8%BF%9E%E6%8E%A5/</guid>
      <description>【LeetCode 684】冗余连接题解。是第一次刷并查集的题目，比较陌生了。给出一个并查集的模版。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%B9%B6%E6%9F%A5%E9%9B%86/leetcode-684%E5%86%97%E4%BD%99%E8%BF%9E%E6%8E%A5/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 446】等差数列划分 II - 子序列</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-446%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%88%92%E5%88%86-ii---%E5%AD%90%E5%BA%8F%E5%88%97/</link>
      <pubDate>Fri, 01 Mar 2024 18:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-446%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%88%92%E5%88%86-ii---%E5%AD%90%E5%BA%8F%E5%88%97/</guid>
      <description>【LeetCode 446】等差数列划分 II - 子序列题解。我们用一个二重循环去遍历 &lt;code&gt;nums&lt;/code&gt; 中的所有元素对 &lt;code&gt;(nums[i], nums[j])&lt;/code&gt;，其中 &lt;code&gt;j&amp;lt;i&lt;/code&gt;。将 &lt;code&gt;nums[i]&lt;/code&gt; 和 &lt;code&gt;nums[j]&lt;/code&gt; 分别当作等差数列的尾项和倒数第二项，则该等差数列的公差 &lt;code&gt;d=nums[i]-nums[j]&lt;/code&gt;。由于公差相同，我们可以将 &lt;code&gt;nums[i]&lt;/code&gt; 加到以 &lt;code&gt;nums[j]&lt;/code&gt; 为尾项，公差为 &lt;code&gt;d&lt;/code&gt; 的弱等差子序列的末尾，这对应着状态转移 &lt;code&gt;dp[i][d]+=dp[j][d]&lt;/code&gt;。同时，&lt;code&gt;(nums[i], nums[j])&lt;/code&gt; 这一对元素也可以当作一个弱等差子序列，故有状态转移&lt;code&gt;dp[i][d]+=dp[j][d]+1&lt;/code&gt;</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-446%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%88%92%E5%88%86-ii---%E5%AD%90%E5%BA%8F%E5%88%97/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 368】最大整除子集</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-368%E6%9C%80%E5%A4%A7%E6%95%B4%E9%99%A4%E5%AD%90%E9%9B%86/</link>
      <pubDate>Fri, 01 Mar 2024 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-368%E6%9C%80%E5%A4%A7%E6%95%B4%E9%99%A4%E5%AD%90%E9%9B%86/</guid>
      <description>【LeetCode 368】最大整除子集题解。难点在于如何记录答案，最后把最大整除子集输出。幸运的是，题目没有限制输出的字典序，只要输出的是合理答案就可以。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-368%E6%9C%80%E5%A4%A7%E6%95%B4%E9%99%A4%E5%AD%90%E9%9B%86/featured.png" />
    </item>
    
    <item>
      <title>JAVA 中的代码生成包 CGLIB （Code Generation Library）</title>
      <link>https://WFUing.github.io/posts/language/java/java%E4%B8%AD%E7%9A%84%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%8C%85cglib/</link>
      <pubDate>Fri, 01 Mar 2024 15:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/java/java%E4%B8%AD%E7%9A%84%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%8C%85cglib/</guid>
      <description>CGLIB 是一个功能强大，高性能的代码生成包。它为没有实现接口的类提供代理，为 JDK 的动态代理提供了很好的补充。通常可以使用Java的动态代理创建代理，但当要代理的类没有实现接口或者为了更好的性能，CGLIB 是一个好的选择。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/java/java%E4%B8%AD%E7%9A%84%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%8C%85cglib/featured.png" />
    </item>
    
    <item>
      <title>从零实现redis(6)- 慢日志监控</title>
      <link>https://WFUing.github.io/posts/language/java/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis6--%E6%85%A2%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7/</link>
      <pubDate>Fri, 01 Mar 2024 15:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/java/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis6--%E6%85%A2%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7/</guid>
      <description>实现类似 guava-cache 中的 removeListener 删除监听器</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/java/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis6--%E6%85%A2%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7/featured.png" />
    </item>
    
    <item>
      <title>单链表的排序</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E9%93%BE%E8%A1%A8/%E5%8D%95%E9%93%BE%E8%A1%A8%E7%9A%84%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Fri, 01 Mar 2024 10:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E9%93%BE%E8%A1%A8/%E5%8D%95%E9%93%BE%E8%A1%A8%E7%9A%84%E6%8E%92%E5%BA%8F/</guid>
      <description>单链表的排序题解。链表的题目很早刷过，现在有些生疏了，再回顾一遍。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E9%93%BE%E8%A1%A8/%E5%8D%95%E9%93%BE%E8%A1%A8%E7%9A%84%E6%8E%92%E5%BA%8F/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 354】俄罗斯套娃信封问题</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-354%E4%BF%84%E7%BD%97%E6%96%AF%E5%A5%97%E5%A8%83%E4%BF%A1%E5%B0%81%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 29 Feb 2024 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-354%E4%BF%84%E7%BD%97%E6%96%AF%E5%A5%97%E5%A8%83%E4%BF%A1%E5%B0%81%E9%97%AE%E9%A2%98/</guid>
      <description>【LeetCode 354】俄罗斯套娃信封问题题解。第一个难点在于如何同时控制 $w_i$ 和 $h_i$ 两个维度，很自然地想到先把一个维度排序，然后只需要考虑另一个维度&lt;strong&gt;最长递增子序列&lt;/strong&gt;就行了。这时候就有第二个难点了，如果在 $w_i$ 这个维度，存在两个值相同的情况怎么处理，需要将 $w_i$ 相同的 $h_i$ 从高到低排序，这样相同 $w_i$ 的部分就不会相互影响。但是还是会TLE，具体如何请看题解。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-354%E4%BF%84%E7%BD%97%E6%96%AF%E5%A5%97%E5%A8%83%E4%BF%A1%E5%B0%81%E9%97%AE%E9%A2%98/featured.png" />
    </item>
    
    <item>
      <title>从零实现redis(5)- 持久化</title>
      <link>https://WFUing.github.io/posts/language/java/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis5--%E6%8C%81%E4%B9%85%E5%8C%96/</link>
      <pubDate>Thu, 29 Feb 2024 15:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/java/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis5--%E6%8C%81%E4%B9%85%E5%8C%96/</guid>
      <description>实现类似 guava-cache 中的 removeListener 删除监听器</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/java/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis5--%E6%8C%81%E4%B9%85%E5%8C%96/featured.png" />
    </item>
    
    <item>
      <title>从零实现redis(4)- 监听器（Listerner） </title>
      <link>https://WFUing.github.io/posts/language/java/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis4--%E7%9B%91%E5%90%AC%E5%99%A8listerner-/</link>
      <pubDate>Thu, 29 Feb 2024 13:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/java/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis4--%E7%9B%91%E5%90%AC%E5%99%A8listerner-/</guid>
      <description>实现类似 guava-cache 中的 removeListener 删除监听器</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/java/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis4--%E7%9B%91%E5%90%AC%E5%99%A8listerner-/featured.png" />
    </item>
    
    <item>
      <title>从零实现redis(3)- 拦截器（Interceptor）</title>
      <link>https://WFUing.github.io/posts/language/java/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis3--%E6%8B%A6%E6%88%AA%E5%99%A8interceptor/</link>
      <pubDate>Thu, 29 Feb 2024 12:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/java/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis3--%E6%8B%A6%E6%88%AA%E5%99%A8interceptor/</guid>
      <description>Interceptor（拦截器）是用于实现AOP（面向切面编程）的工具之一，常用于对系统中的某些操作进行拦截并在其之前或之后加入某些处理，例如性能监控、日志记录、安全检查、事务处理、权限检查等。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/java/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis3--%E6%8B%A6%E6%88%AA%E5%99%A8interceptor/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 312】戳气球</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-312%E6%88%B3%E6%B0%94%E7%90%83/</link>
      <pubDate>Wed, 28 Feb 2024 18:31:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-312%E6%88%B3%E6%B0%94%E7%90%83/</guid>
      <description>【LeetCode 312】戳气球题解。本题的难点在于如何控制气球的相邻信息，每一次戳气球都会产生新的相邻的气球，但是很容易有一种做题的直觉，先判断一个气球，然后继续判断其左边和右边。怎么判断呢？可以倒过来看这些操作，将全过程看作是每次添加一个气球。我们定义方法 &lt;code&gt;solve&lt;/code&gt; ，令 &lt;code&gt;solve(i, j)&lt;/code&gt; 表示将开区间 &lt;code&gt;(i, j)&lt;/code&gt; 内的位置全部填满气球能够得到的最多硬币数。由于是开区间，因此区间两端的气球的编号就是 &lt;code&gt;i&lt;/code&gt; 和 &lt;code&gt;j&lt;/code&gt;，对应着 &lt;code&gt;val[i]&lt;/code&gt; 和 &lt;code&gt;val[j]&lt;/code&gt;。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-312%E6%88%B3%E6%B0%94%E7%90%83/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 337】打家劫舍III</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-337%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8Diii/</link>
      <pubDate>Wed, 28 Feb 2024 18:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-337%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8Diii/</guid>
      <description>【LeetCode 337】打家劫舍III题解。很自然地想到是树状dp，分成两种情况，一种包含当前节点，另一种不包含。难点在于不包含的情况，不仅仅有左右孩子包含的情况，还有不包含的情况。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-337%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8Diii/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 188】买卖股票的最佳时机IV</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-188%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAiv/</link>
      <pubDate>Wed, 28 Feb 2024 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-188%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAiv/</guid>
      <description>【LeetCode 188】买卖股票的最佳时机IV题解。本题的难点有三个方面：1️⃣关于 $in$ 和 $out$ 数组中 $j$ 的关系，在这里，&lt;code&gt;买入卖出&lt;/code&gt;这一整套流程才算一次交易。那么，在卖出的那一刻，1次交易就完成了。那第一次买入，其实是第 0 次交易，第一次卖出，是第 1 次交易结束。2️⃣如何初始化，首先第一天只能买进，不能卖出，而且最多只能有一次交易，那么 $in[0][1&amp;hellip;k]$ 和 $out[0][1&amp;hellip;k]$ 如何初始化。3️⃣如何更新 $in$ 和 $out$ 数组。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-188%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAiv/featured.png" />
    </item>
    
    <item>
      <title>判断链表中是否有环</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E9%93%BE%E8%A1%A8/%E5%88%A4%E6%96%AD%E9%93%BE%E8%A1%A8%E4%B8%AD%E6%98%AF%E5%90%A6%E6%9C%89%E7%8E%AF/</link>
      <pubDate>Wed, 28 Feb 2024 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E9%93%BE%E8%A1%A8/%E5%88%A4%E6%96%AD%E9%93%BE%E8%A1%A8%E4%B8%AD%E6%98%AF%E5%90%A6%E6%9C%89%E7%8E%AF/</guid>
      <description>判断链表中是否有环题解。链表的题目很早刷过，现在有些生疏了，再回顾一遍。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E9%93%BE%E8%A1%A8/%E5%88%A4%E6%96%AD%E9%93%BE%E8%A1%A8%E4%B8%AD%E6%98%AF%E5%90%A6%E6%9C%89%E7%8E%AF/featured.png" />
    </item>
    
    <item>
      <title>从零实现redis(2)- expire 过期原理</title>
      <link>https://WFUing.github.io/posts/language/java/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis2--expire-%E8%BF%87%E6%9C%9F%E5%8E%9F%E7%90%86/</link>
      <pubDate>Wed, 28 Feb 2024 12:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/java/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis2--expire-%E8%BF%87%E6%9C%9F%E5%8E%9F%E7%90%86/</guid>
      <description>Redis 是可以对 key 设置过期时间的，因此需要有相应的机制将已过期的键值对删除，而做这个工作的就是过期键值删除策略。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/java/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis2--expire-%E8%BF%87%E6%9C%9F%E5%8E%9F%E7%90%86/featured.png" />
    </item>
    
    <item>
      <title>从零实现redis(1)-实现固定缓存大小</title>
      <link>https://WFUing.github.io/posts/language/java/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis1-%E5%AE%9E%E7%8E%B0%E5%9B%BA%E5%AE%9A%E7%BC%93%E5%AD%98%E5%A4%A7%E5%B0%8F/</link>
      <pubDate>Wed, 28 Feb 2024 11:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/java/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis1-%E5%AE%9E%E7%8E%B0%E5%9B%BA%E5%AE%9A%E7%BC%93%E5%AD%98%E5%A4%A7%E5%B0%8F/</guid>
      <description>redis 的驱除策略，也称为内存淘汰策略。当 Redis 的运行内存已经超过 Redis 设置的最大内存之后，则会使用内存淘汰策略删除符合条件的 key，以此来保障 Redis 高效的运行。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/java/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis1-%E5%AE%9E%E7%8E%B0%E5%9B%BA%E5%AE%9A%E7%BC%93%E5%AD%98%E5%A4%A7%E5%B0%8F/featured.png" />
    </item>
    
    <item>
      <title>合并k个已排序的链表</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E9%93%BE%E8%A1%A8/%E5%90%88%E5%B9%B6k%E4%B8%AA%E5%B7%B2%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Tue, 27 Feb 2024 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E9%93%BE%E8%A1%A8/%E5%90%88%E5%B9%B6k%E4%B8%AA%E5%B7%B2%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8/</guid>
      <description>合并k个已排序的链表题解。链表的题目很早刷过，现在有些生疏了，再回顾一遍。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E9%93%BE%E8%A1%A8/%E5%90%88%E5%B9%B6k%E4%B8%AA%E5%B7%B2%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 174】地下城游戏</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-174%E5%9C%B0%E4%B8%8B%E5%9F%8E%E6%B8%B8%E6%88%8F/</link>
      <pubDate>Mon, 26 Feb 2024 20:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-174%E5%9C%B0%E4%B8%8B%E5%9F%8E%E6%B8%B8%E6%88%8F/</guid>
      <description>【LeetCode 174】地下城游戏题解。本题的难点在于怎么处理血量增加的问题, 增加血量不能为之前的损失提供帮助，只会对后续有帮助。这意味着从王子救公主的思路想dp是困难的，但是公主救王子的思路dp很好做，从后往前推，当前如果可以治愈，那么当前的最小初始血量就是已经扣除的血量减去治疗量，注意不可以&amp;lt;1。 这意味着过量治疗。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-174%E5%9C%B0%E4%B8%8B%E5%9F%8E%E6%B8%B8%E6%88%8F/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 124】二叉树中的最大路径和</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-124%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%AF%E5%BE%84%E5%92%8C/</link>
      <pubDate>Mon, 26 Feb 2024 19:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-124%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%AF%E5%BE%84%E5%92%8C/</guid>
      <description>【LeetCode 124】二叉树中的最大路径和题解。这题是树状dp的典型，如何在遍历树的过程中记录一些信息，是比较难的一个点。此外，这题有两个要记录的内容，一个是树（包括子树）的 根节点 或者 根节点和一个左/右节点 中的最大值，这个要一路记录上去，用 dp 记录。还有一个就是 根节点、左节点和右节点 与之前 dp 中的最大值，这个是最后的答案，用 ans 记录。我在解题的时候，总会忘记把 ans 跟自己做比较，也是以后需要注意的一个点。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-124%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%AF%E5%BE%84%E5%92%8C/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 115】不同的子序列</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-115%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97/</link>
      <pubDate>Mon, 26 Feb 2024 18:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-115%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97/</guid>
      <description>【LeetCode 115】不同的子序列题解。在我二刷这道题的时候，卡着没做出来，画了 $dp[][]$ 数组，但是没有&lt;strong&gt;初始化&lt;/strong&gt;，所以一直出错，直到看了题解。但是官方题解是从后往前遍历，我觉得并没有这个必要。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-115%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 72】编辑距离</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-72%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/</link>
      <pubDate>Mon, 26 Feb 2024 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-72%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/</guid>
      <description>【LeetCode 72】编辑距离题解。在我二刷这道题的时候，还是卡了一会，主要有三个难点：1️⃣dp数组表示什么2️⃣如何初始化dp数组3️⃣如何针对题目告诉我们的三种操作，实现dp数组的更新。当然这也是动态规划数组的三个难点，需要重点培养这种感觉，形成正确的判断直觉。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-72%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/featured.png" />
    </item>
    
    <item>
      <title>链表内指定区间反转</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E9%93%BE%E8%A1%A8/%E9%93%BE%E8%A1%A8%E5%86%85%E6%8C%87%E5%AE%9A%E5%8C%BA%E9%97%B4%E5%8F%8D%E8%BD%AC/</link>
      <pubDate>Mon, 26 Feb 2024 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E9%93%BE%E8%A1%A8/%E9%93%BE%E8%A1%A8%E5%86%85%E6%8C%87%E5%AE%9A%E5%8C%BA%E9%97%B4%E5%8F%8D%E8%BD%AC/</guid>
      <description>链表内指定区间反转题解。链表的题目很早刷过，现在有些生疏了，再回顾一遍。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E9%93%BE%E8%A1%A8/%E9%93%BE%E8%A1%A8%E5%86%85%E6%8C%87%E5%AE%9A%E5%8C%BA%E9%97%B4%E5%8F%8D%E8%BD%AC/featured.png" />
    </item>
    
    <item>
      <title>大数据物理设备介绍</title>
      <link>https://WFUing.github.io/posts/skills/big-data-hardware/</link>
      <pubDate>Sun, 25 Feb 2024 10:46:05 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/skills/big-data-hardware/</guid>
      <description>大数据（big data），指无法在一定时间范围内用常规软件工具进行捕捉、管理和处理的数据集合，是需要新处理模式才能具有更强的决策力、洞察发现力和流程优化能力的海量、高增长率和多样化的信息资产。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/skills/big-data-hardware/featured.png" />
    </item>
    
    <item>
      <title>Hadoop-HDFS</title>
      <link>https://WFUing.github.io/posts/architecture/distributed/hadoop/hdfs/</link>
      <pubDate>Sun, 25 Feb 2024 09:46:05 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/distributed/hadoop/hdfs/</guid>
      <description>HDFS是Hadoop Distribute File System 的简称，意为Hadoop分布式文件系统。是Hadoop核心组件之一，作为最底层的分布式存储服务而存在。分布式文件系统解决的问题就是大数据存储。它们是横跨在多台计算机上的存储系统。分布式文件系统在大数据时代有着广泛的应用前景，它们为存储和处理超大规模数据提供所需的扩展能力。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/distributed/hadoop/hdfs/featured.png" />
    </item>
    
    <item>
      <title>java面经-MQ篇</title>
      <link>https://WFUing.github.io/posts/language/java/%E9%9D%A2%E7%BB%8F%E7%BC%A9%E5%87%8F%E7%89%88/mq%E7%AF%87/</link>
      <pubDate>Thu, 22 Feb 2024 13:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/java/%E9%9D%A2%E7%BB%8F%E7%BC%A9%E5%87%8F%E7%89%88/mq%E7%AF%87/</guid>
      <description>Java MQ（消息队列）是一种在分布式系统中用于实现异步通信的机制。它允许应用程序之间通过发送和接收消息进行通信，提供了解耦、异步、削峰填谷等特性，适用于解决分布式系统中的各种通信和协作问题。常见的 Java MQ 实现包括 RabbitMQ、ActiveMQ、Kafka 等，它们具有不同的特点和适用场景，可根据实际需求选择合适的实现。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/java/%E9%9D%A2%E7%BB%8F%E7%BC%A9%E5%87%8F%E7%89%88/mq%E7%AF%87/featured.png" />
    </item>
    
    <item>
      <title>java面经-JVM篇</title>
      <link>https://WFUing.github.io/posts/language/java/%E9%9D%A2%E7%BB%8F%E7%BC%A9%E5%87%8F%E7%89%88/jvm%E7%AF%87/</link>
      <pubDate>Thu, 22 Feb 2024 10:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/java/%E9%9D%A2%E7%BB%8F%E7%BC%A9%E5%87%8F%E7%89%88/jvm%E7%AF%87/</guid>
      <description>Java虚拟机（JVM）是Java程序的运行环境，负责将Java字节码解释或编译为本地机器代码，并提供垃圾回收、内存管理等功能。JVM包括类加载器、执行引擎、内存区域、垃圾回收器等组件，可在不同平台上运行Java程序，实现“一次编写，到处运行”的跨平台特性。通过JVM，Java程序实现了与平台无关的特性，提高了开发效率和代码的可移植性。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/java/%E9%9D%A2%E7%BB%8F%E7%BC%A9%E5%87%8F%E7%89%88/jvm%E7%AF%87/featured.png" />
    </item>
    
    <item>
      <title>java面经-网络篇</title>
      <link>https://WFUing.github.io/posts/language/java/%E9%9D%A2%E7%BB%8F%E7%BC%A9%E5%87%8F%E7%89%88/%E7%BD%91%E7%BB%9C%E7%AF%87/</link>
      <pubDate>Thu, 22 Feb 2024 10:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/java/%E9%9D%A2%E7%BB%8F%E7%BC%A9%E5%87%8F%E7%89%88/%E7%BD%91%E7%BB%9C%E7%AF%87/</guid>
      <description>Java网络编程提供了一套强大的API，支持TCP、UDP、HTTP等协议。通过Socket和ServerSocket实现客户端与服务器的通信。NIO提供非阻塞IO，提高并发处理能力。URL、URLConnection可用于HTTP操作。Java的网络编程简洁、灵活，适用于构建各种网络应用，如Web服务器、网络爬虫等。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/java/%E9%9D%A2%E7%BB%8F%E7%BC%A9%E5%87%8F%E7%89%88/%E7%BD%91%E7%BB%9C%E7%AF%87/featured.png" />
    </item>
    
    <item>
      <title>java面经-并发篇</title>
      <link>https://WFUing.github.io/posts/language/java/%E9%9D%A2%E7%BB%8F%E7%BC%A9%E5%87%8F%E7%89%88/%E5%B9%B6%E5%8F%91%E7%AF%87/</link>
      <pubDate>Wed, 21 Feb 2024 20:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/java/%E9%9D%A2%E7%BB%8F%E7%BC%A9%E5%87%8F%E7%89%88/%E5%B9%B6%E5%8F%91%E7%AF%87/</guid>
      <description>Java并发指的是在Java程序中同时执行多个任务的能力。通过多线程、同步机制、锁、线程池等工具，Java提供了丰富的并发编程支持。并发编程可以提高程序性能和资源利用率，但也面临线程安全、死锁等问题。Java并发编程涉及线程创建、管理、通信、同步等方面，包括使用synchronized关键字、Lock接口、线程池、并发集合等技术来实现并发控制和数据共享。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/java/%E9%9D%A2%E7%BB%8F%E7%BC%A9%E5%87%8F%E7%89%88/%E5%B9%B6%E5%8F%91%E7%AF%87/featured.png" />
    </item>
    
    <item>
      <title>Spring MVC常用注解</title>
      <link>https://WFUing.github.io/posts/language/java/spring/spring-mvc%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/</link>
      <pubDate>Wed, 21 Feb 2024 16:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/java/spring/spring-mvc%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/</guid>
      <description>Spring MVC 是一个基于 Java 的 Web 应用开发框架，它通过提供模型-视图-控制器（MVC）架构来简化 Web 开发。Spring MVC 充分利用了依赖注入和面向切面编程等特性，使得开发者能够轻松地构建灵活、模块化的 Web 应用。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/java/spring/spring-mvc%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/featured.png" />
    </item>
    
    <item>
      <title>VO、DTO、BO、PO、DO区别</title>
      <link>https://WFUing.github.io/posts/language/java/vodtobopodo%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Sat, 17 Feb 2024 16:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/java/vodtobopodo%E5%8C%BA%E5%88%AB/</guid>
      <description>VO（View Object）视图对象；DTO（Data Transfer Object）数据传输对象；BO（Business Object）业务层对象；PO（Persistent Object）持久化对象；DO（Domain Object）领域对象。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/java/vodtobopodo%E5%8C%BA%E5%88%AB/featured.png" />
    </item>
    
    <item>
      <title>Spring中Bean的生命周期</title>
      <link>https://WFUing.github.io/posts/language/java/spring/spring%E4%B8%ADbean%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</link>
      <pubDate>Thu, 15 Feb 2024 16:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/java/spring/spring%E4%B8%ADbean%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</guid>
      <description>对于普通的Java对象，当new的时候创建对象，当它没有任何引用的时候被垃圾回收机制回收。 而由Spring IoC容器托管的对象，它们的生命周期完全由容器控制。 概括Spring中Bean的生命周期 # Spring中每个Bean的生命周期如下：</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/java/spring/spring%E4%B8%ADbean%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/featured.png" />
    </item>
    
    <item>
      <title>滑动窗口技巧</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E7%AE%97%E6%B3%95/</link>
      <pubDate>Wed, 14 Feb 2024 12:51:58 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E7%AE%97%E6%B3%95/</guid>
      <description>滑动窗口技巧的思路非常简单，就是维护一个窗口，不断滑动，然后更新答案。LeetCode 上有起码 10 道运用滑动窗口算法的题目，难度都是中等和困难。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E7%AE%97%E6%B3%95/featured.png" />
    </item>
    
    <item>
      <title>二分查找技巧</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/%E4%BA%8C%E5%88%86%E6%A8%A1%E7%89%88/</link>
      <pubDate>Tue, 13 Feb 2024 12:51:58 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/%E4%BA%8C%E5%88%86%E6%A8%A1%E7%89%88/</guid>
      <description>二分查找是一种高效的搜索算法，适用于有序数组。它通过每次将搜索范围缩小一半来查找目标元素，直到找到或者确定不存在。时间复杂度为O(log n)，效率高于线性搜索。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/%E4%BA%8C%E5%88%86%E6%A8%A1%E7%89%88/featured.png" />
    </item>
    
    <item>
      <title>Spring Boot 的核心注解</title>
      <link>https://WFUing.github.io/posts/language/java/spring/spring-boot-%E7%9A%84%E6%A0%B8%E5%BF%83%E6%B3%A8%E8%A7%A3/</link>
      <pubDate>Wed, 07 Feb 2024 16:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/java/spring/spring-boot-%E7%9A%84%E6%A0%B8%E5%BF%83%E6%B3%A8%E8%A7%A3/</guid>
      <description>Spring Boot 是一种快速开发应用程序的框架，提供了一系列的注解来简化开发过程。其中，最重要的就是核心注解，它能帮助开发者快速配置应用程序。本文将深入探讨 Spring Boot 的核心注解，介绍它的作用以及常见的组成注解。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/java/spring/spring-boot-%E7%9A%84%E6%A0%B8%E5%BF%83%E6%B3%A8%E8%A7%A3/featured.jpeg" />
    </item>
    
    <item>
      <title>java元注解@interface</title>
      <link>https://WFUing.github.io/posts/language/java/java%E5%85%83%E6%B3%A8%E8%A7%A3@interface/</link>
      <pubDate>Wed, 07 Feb 2024 15:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/java/java%E5%85%83%E6%B3%A8%E8%A7%A3@interface/</guid>
      <description>注解（Annontion）是Java5开始引入的新特征。它提供了一种安全的类似注释的机制，用来将任何的信息或元数据（metadata）与程序元素（类、方法、成员变量等）进行关联。元注解的作用就是负责注解其他注解。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/java/java%E5%85%83%E6%B3%A8%E8%A7%A3@interface/featured.png" />
    </item>
    
    <item>
      <title>《金字塔原理》读书笔记</title>
      <link>https://WFUing.github.io/read/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86/</link>
      <pubDate>Thu, 18 Jan 2024 13:16:22 +0800</pubDate>
      
      <guid>https://WFUing.github.io/read/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86/</guid>
      <description>在生活、特别是工作当中，我们每个人都会碰到需要向他人以书面形式或口头形式阐述自己的观点、想法的情况。可现实中，我们说话做事经常出现逻辑混乱、想到哪说到哪，不能很好地突出重点，层次分明的把一件事情说清楚，这往往会限制、阻碍我们的发展。面对这些问题，如何才能突出重点、逻辑清晰、主次分明的思考、表达和解决问题呢？学会“金字塔原理”就够了！</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/read/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86/featured.jpeg" />
    </item>
    
    <item>
      <title>高级软件设计复习</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E9%AB%98%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sun, 31 Dec 2023 13:53:28 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E9%AB%98%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/</guid>
      <description>南京大学软件学院高级软件设计简答题部分复习</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E9%AB%98%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/featured.png" />
    </item>
    
    <item>
      <title>设计模式-目录</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%9B%AE%E5%BD%95/</link>
      <pubDate>Sun, 31 Dec 2023 13:50:15 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%9B%AE%E5%BD%95/</guid>
      <description>设计模式是解决问题的方案，学习现有的设计模式可以做到经验复用。拥有设计模式词汇，在沟通时就能用更少的词汇来讨论，并且不需要了解底层细节。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%9B%AE%E5%BD%95/featured.jpeg" />
    </item>
    
    <item>
      <title>设计模式 - 中介者</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%B8%AD%E4%BB%8B%E8%80%85/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%B8%AD%E4%BB%8B%E8%80%85/</guid>
      <description>集中相关对象之间复杂的沟通和控制方式。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%B8%AD%E4%BB%8B%E8%80%85/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 原型模式</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</guid>
      <description>使用原型实例指定要创建对象的类型，通过复制这个原型来创建新对象。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 备忘录</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%A4%87%E5%BF%98%E5%BD%95/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%A4%87%E5%BF%98%E5%BD%95/</guid>
      <description>在不违反封装的情况下获得对象的内部状态，从而在需要时可以将对象恢复到最初状态。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%A4%87%E5%BF%98%E5%BD%95/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 工厂方法</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95/</guid>
      <description>定义了一个创建对象的接口，但由子类决定要实例化哪个类。工厂方法把实例化操作推迟到子类。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 抽象工厂</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/</guid>
      <description>提供一个接口，用于创建相关的对象家族。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 模板方法</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95/</guid>
      <description>定义算法框架，并将一些步骤的实现延迟到子类。通过模板方法，子类可以重新定义算法的某些步骤，而不用改变算法的结构。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 生成器</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%94%9F%E6%88%90%E5%99%A8/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%94%9F%E6%88%90%E5%99%A8/</guid>
      <description>封装一个对象的构造过程，并允许按步骤构造。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%94%9F%E6%88%90%E5%99%A8/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 空对象</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%A9%BA%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%A9%BA%E5%AF%B9%E8%B1%A1/</guid>
      <description>使用什么都不做的空对象来代替 NULL。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%A9%BA%E5%AF%B9%E8%B1%A1/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 策略</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AD%96%E7%95%A5/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AD%96%E7%95%A5/</guid>
      <description>定义一系列算法，封装每个算法，并使它们可以互换。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AD%96%E7%95%A5/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 简单工厂</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82/</guid>
      <description>在创建一个对象时不向客户暴露内部细节，并提供一个创建对象的通用接口。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 组合</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%BB%84%E5%90%88/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%BB%84%E5%90%88/</guid>
      <description>将对象组合成树形结构来表示“整体/部分”层次关系，允许用户以相同的方式处理单独对象和组合对象。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%BB%84%E5%90%88/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 装饰</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A3%85%E9%A5%B0/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A3%85%E9%A5%B0/</guid>
      <description>为对象动态添加功能。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A3%85%E9%A5%B0/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 观察者</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A7%82%E5%AF%9F%E8%80%85/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A7%82%E5%AF%9F%E8%80%85/</guid>
      <description>定义对象之间的一对多依赖，当一个对象状态改变时，它的所有依赖都会收到通知并且自动更新状态。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A7%82%E5%AF%9F%E8%80%85/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 解释器</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A7%A3%E9%87%8A%E5%99%A8/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A7%A3%E9%87%8A%E5%99%A8/</guid>
      <description>为语言创建解释器，通常由语言的语法和语法分析来定义。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A7%A3%E9%87%8A%E5%99%A8/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 访问者</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%AE%BF%E9%97%AE%E8%80%85/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%AE%BF%E9%97%AE%E8%80%85/</guid>
      <description>为一个对象结构（比如组合结构）增加新能力。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%AE%BF%E9%97%AE%E8%80%85/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 责任链</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%B4%A3%E4%BB%BB%E9%93%BE/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%B4%A3%E4%BB%BB%E9%93%BE/</guid>
      <description>使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系。将这些对象连成一条链，并沿着这条链发送该请求，直到有一个对象处理它为止。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%B4%A3%E4%BB%BB%E9%93%BE/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 迭代器</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%BF%AD%E4%BB%A3%E5%99%A8/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%BF%AD%E4%BB%A3%E5%99%A8/</guid>
      <description>提供一种顺序访问聚合对象元素的方法，并且不暴露聚合对象的内部表示。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%BF%AD%E4%BB%A3%E5%99%A8/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 适配器</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E9%80%82%E9%85%8D%E5%99%A8/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E9%80%82%E9%85%8D%E5%99%A8/</guid>
      <description>把一个类接口转换成另一个用户需要的接口。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E9%80%82%E9%85%8D%E5%99%A8/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 享元</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%BA%AB%E5%85%83/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:58 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%BA%AB%E5%85%83/</guid>
      <description>利用共享的方式来支持大量细粒度的对象，这些对象一部分内部状态是相同的。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%BA%AB%E5%85%83/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 代理</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%BB%A3%E7%90%86/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:58 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%BB%A3%E7%90%86/</guid>
      <description>控制对其它对象的访问。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%BB%A3%E7%90%86/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 单例</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8D%95%E4%BE%8B/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:58 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8D%95%E4%BE%8B/</guid>
      <description>使用一个私有构造函数、一个私有静态变量以及一个公有静态函数来实现。私有构造函数保证了不能通过构造函数来创建对象实例，只能通过公有静态函数返回唯一的私有静态变量。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8D%95%E4%BE%8B/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 命令</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:58 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%91%BD%E4%BB%A4/</guid>
      <description>将命令封装成对象中</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%91%BD%E4%BB%A4/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 外观</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%A4%96%E8%A7%82/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:58 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%A4%96%E8%A7%82/</guid>
      <description>提供了一个统一的接口，用来访问子系统中的一群接口，从而让子系统更容易使用。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%A4%96%E8%A7%82/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 桥接</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%A1%A5%E6%8E%A5/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:58 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%A1%A5%E6%8E%A5/</guid>
      <description>将抽象与实现分离开来，使它们可以独立变化。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%A1%A5%E6%8E%A5/featured.png" />
    </item>
    
    <item>
      <title>设计模式 - 状态</title>
      <link>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%8A%B6%E6%80%81/</link>
      <pubDate>Sun, 31 Dec 2023 12:51:58 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%8A%B6%E6%80%81/</guid>
      <description>允许对象在内部状态改变时改变它的行为，对象看起来好像修改了它所属的类。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%8A%B6%E6%80%81/featured.png" />
    </item>
    
    <item>
      <title>华为发展历程</title>
      <link>https://WFUing.github.io/read/%E5%8D%8E%E4%B8%BA/</link>
      <pubDate>Sat, 30 Dec 2023 19:16:22 +0800</pubDate>
      
      <guid>https://WFUing.github.io/read/%E5%8D%8E%E4%B8%BA/</guid>
      <description>童年 # 1944年的10月25日，在新中国还没有成立的动荡年代，一个叫做任正非的孩子降生在了一个穷苦的贵州山区家庭。任正非的父亲叫做任木生。任木生年轻时因为家道中落，所以选择去了国民党412军工厂担任一位会计员，私下经常参与爱国抗日运动。但因同意共产党观点，遭国民党特务追捕，为逃避追捕，任木生逃往贵州山区。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/read/%E5%8D%8E%E4%B8%BA/featured.png" />
    </item>
    
    <item>
      <title>数据仓库与知识发现名词解释</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E4%B8%8E%E7%9F%A5%E8%AF%86%E5%8F%91%E7%8E%B0/concept/</link>
      <pubDate>Sun, 24 Dec 2023 12:18:11 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E4%B8%8E%E7%9F%A5%E8%AF%86%E5%8F%91%E7%8E%B0/concept/</guid>
      <description>《数据仓库与知识发现》名词解释部分复习</description>
      
    </item>
    
    <item>
      <title>Apriori</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E4%B8%8E%E7%9F%A5%E8%AF%86%E5%8F%91%E7%8E%B0/apriori/</link>
      <pubDate>Sun, 24 Dec 2023 10:20:25 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E4%B8%8E%E7%9F%A5%E8%AF%86%E5%8F%91%E7%8E%B0/apriori/</guid>
      <description>Apriori 是一种用于关联规则挖掘的经典算法。关联规则挖掘是数据挖掘领域的一项重要任务，其目标是从大规模数据集中发现项集之间的关联关系。Apriori 算法是由Rakesh Agrawal 和 Ramakrishnan Srikant 在1994年提出的，它主要用于发现数据集中频繁出现的项集。</description>
      
    </item>
    
    <item>
      <title>《软件安全技术-机械工业出版社》复习笔记</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/problems/</link>
      <pubDate>Fri, 22 Dec 2023 18:26:58 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/problems/</guid>
      <description>南京大学软件学院软件安全复习资料</description>
      
    </item>
    
    <item>
      <title>《软件工程与计算》考试复习笔记</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97%E8%80%83%E8%AF%95%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 21 Dec 2023 18:26:58 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97%E8%80%83%E8%AF%95%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>南京大学软件学院软件工程与计算复习资料</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97%E8%80%83%E8%AF%95%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/featured.png" />
    </item>
    
    <item>
      <title>cuelang 简介</title>
      <link>https://WFUing.github.io/posts/language/dsl/cuelang/</link>
      <pubDate>Sun, 17 Dec 2023 22:23:15 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/dsl/cuelang/</guid>
      <description>CUE 是一种开源数据验证语言和推理引擎，源于逻辑编程。虽然该语言不是通用编程语言，但它有许多应用，如数据验证、数据模板、配置、查询、代码生成甚至脚本编写。推理引擎可用于验证代码中的数据，或将其作为代码生成管道的一部分。</description>
      
    </item>
    
    <item>
      <title>Data Preprocessing</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E4%B8%8E%E7%9F%A5%E8%AF%86%E5%8F%91%E7%8E%B0/data-preprocessing/</link>
      <pubDate>Sat, 16 Dec 2023 22:35:50 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E4%B8%8E%E7%9F%A5%E8%AF%86%E5%8F%91%E7%8E%B0/data-preprocessing/</guid>
      <description>现实世界中的数据存在不完整、有噪声、不一致的问题，没有高质量的数据，就没有高质量的挖掘结果！质量决策必须基于质量数据，数据仓库需要对质量数据进行一致的集成。</description>
      
    </item>
    
    <item>
      <title>Data Warehousing</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E4%B8%8E%E7%9F%A5%E8%AF%86%E5%8F%91%E7%8E%B0/data-warehousing/</link>
      <pubDate>Fri, 15 Dec 2023 10:29:14 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E4%B8%8E%E7%9F%A5%E8%AF%86%E5%8F%91%E7%8E%B0/data-warehousing/</guid>
      <description>数据仓库是一个面向主题的、集成的、时变的和非易失性的数据集合，支持管理决策过程。</description>
      
    </item>
    
    <item>
      <title>Flawfinder</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/analysis/flawfinder/</link>
      <pubDate>Wed, 13 Dec 2023 14:53:59 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/analysis/flawfinder/</guid>
      <description>Flawfinder主要用于查找C/C++代码中的安全漏洞，特别是与安全性相关的缺陷。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/analysis/flawfinder/featured.png" />
    </item>
    
    <item>
      <title>Kythe Schema Overview</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/analysis/kythe/</link>
      <pubDate>Wed, 13 Dec 2023 11:08:22 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/analysis/kythe/</guid>
      <description>Kythe是一个开源软件工程生态系统，用于建立和维护大型代码库的跨语言代码索引。它提供了强大的代码导航和分析工具，支持多语言和多仓库项目。Kythe的目标是提高软件工程师的开发效率，使他们能够更轻松地理解和管理复杂的代码结构。</description>
      
    </item>
    
    <item>
      <title>Meta Key</title>
      <link>https://WFUing.github.io/posts/skills/meta/</link>
      <pubDate>Tue, 12 Dec 2023 11:22:18 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/skills/meta/</guid>
      <description>在MacOS终端中，可以将“Option”键设置为“Meta”键。打开终端偏好设置，选择“Profiles” &amp;gt; “Keyboard” &amp;gt; “Use Option as Meta key”。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/skills/meta/featured.jpeg" />
    </item>
    
    <item>
      <title>Language Server Protocol 的工作原理</title>
      <link>https://WFUing.github.io/posts/language/lsp/lsp-principle/</link>
      <pubDate>Sun, 10 Dec 2023 13:21:20 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/lsp/lsp-principle/</guid>
      <description>Language Server Protocol （语言服务器协议，简称 LSP）是微软于 2016 年提出的一套统一的通讯协议方案。该方案定义了一套编辑器或 IDE 与语言服务器之间使用的协议，该语言服务器提供自动完成、转到定义、查找所有引用等语言功能。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/lsp/lsp-principle/featured.png" />
    </item>
    
    <item>
      <title>Monaco Editor</title>
      <link>https://WFUing.github.io/posts/language/lsp/monaco-editor/</link>
      <pubDate>Sun, 10 Dec 2023 12:54:21 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/lsp/monaco-editor/</guid>
      <description>Resources # 官网： https://microsoft.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/lsp/monaco-editor/featured.png" />
    </item>
    
    <item>
      <title>数据仓库与知识发现概览</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E4%B8%8E%E7%9F%A5%E8%AF%86%E5%8F%91%E7%8E%B0/overview/</link>
      <pubDate>Sat, 09 Dec 2023 10:14:52 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%A0%94%E7%A9%B6%E7%94%9F%E5%A4%8D%E4%B9%A0/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E4%B8%8E%E7%9F%A5%E8%AF%86%E5%8F%91%E7%8E%B0/overview/</guid>
      <description>数据挖掘（ Knowledge discovery(mining) in databases ，KDD）：从大型数据库中提取有趣（非平凡、隐含、先前未知且潜在有用）的信息或模式。</description>
      
    </item>
    
    <item>
      <title>《极限编程》读书笔记</title>
      <link>https://WFUing.github.io/read/%E6%9E%81%E9%99%90%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Tue, 05 Dec 2023 13:16:22 +0800</pubDate>
      
      <guid>https://WFUing.github.io/read/%E6%9E%81%E9%99%90%E7%BC%96%E7%A8%8B/</guid>
      <description>主要介绍了极限编程（Extreme Programming，XP）的理念和实践方法。作者Kent Beck以问题为出发点，提出了解决软件开发中困扰人们的风险和成本问题的方法。书中分为两部分，第一部分探讨了问题，第二部分提出了解决方案。适合软件开发领域的从业者，尤其是团队领导者和项目经理。适用于那些希望改善软件开发流程、提高质量和降低成本的团队。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/read/%E6%9E%81%E9%99%90%E7%BC%96%E7%A8%8B/featured.png" />
    </item>
    
    <item>
      <title>使用 Kubevela 部署 mall-swarm 项目</title>
      <link>https://WFUing.github.io/posts/architecture/virtualization/k8s/kubevela-mall-swarm/</link>
      <pubDate>Tue, 05 Dec 2023 10:27:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/virtualization/k8s/kubevela-mall-swarm/</guid>
      <description>本项目用kubevela部署mall-swarm，mall-swarm是一套微服务商城系统，采用了 Spring Cloud 2021 &amp;amp; Alibaba、Spring Boot 2.7、Oauth2、MyBatis、Elasticsearch、Docker、Kubernetes等核心技术。</description>
      
    </item>
    
    <item>
      <title>Ceph集群部署</title>
      <link>https://WFUing.github.io/posts/architecture/distributed/ceph/</link>
      <pubDate>Tue, 05 Dec 2023 09:46:05 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/distributed/ceph/</guid>
      <description>Ceph是一种开源分布式存储系统，为大规模数据提供可扩展性和高性能。它使用分布式对象存储、块存储和文件系统，通过智能数据复制和动态数据分布，确保高可用性和容错性。Ceph的设计使其适用于云计算和大数据环境，提供灵活、可靠的存储解决方案，同时支持自动负载平衡和故障恢复。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/distributed/ceph/featured.png" />
    </item>
    
    <item>
      <title>《凤凰项目》读书笔记</title>
      <link>https://WFUing.github.io/read/%E5%87%A4%E5%87%B0%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Tue, 28 Nov 2023 11:16:22 +0800</pubDate>
      
      <guid>https://WFUing.github.io/read/%E5%87%A4%E5%87%B0%E9%A1%B9%E7%9B%AE/</guid>
      <description>本书通过虚构的故事，介绍了IT运维和软件开发领域的最佳实践，强调快速交付、稳定运行、持续学习的三大支柱。以及业务、开发、IT运维、信息安全四个价值流的优化，倡导DevOps文化。面向IT从业者、软件开发人员、运维工程师等，适用于希望优化IT流程、提高交付效率的组织和个人。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/read/%E5%87%A4%E5%87%B0%E9%A1%B9%E7%9B%AE/featured.png" />
    </item>
    
    <item>
      <title>Kubevela</title>
      <link>https://WFUing.github.io/posts/architecture/virtualization/k8s/kubevela/</link>
      <pubDate>Mon, 27 Nov 2023 16:11:01 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/virtualization/k8s/kubevela/</guid>
      <description>KubeVela 是一个开箱即用的现代化应用交付与管理平台，它使得应用在面向混合云环境中的交付更简单、快捷。使用 KubeVela 的软件开发团队，可以按需使用云原生能力构建应用，随着团队规模的发展、业务场景的变化扩展其功能，一次构建应用，随处运行。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/virtualization/k8s/kubevela/featured.png" />
    </item>
    
    <item>
      <title>Open Application Model</title>
      <link>https://WFUing.github.io/posts/architecture/iac/oam/</link>
      <pubDate>Fri, 17 Nov 2023 09:21:20 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iac/oam/</guid>
      <description>Open Application Model 的目标是定义一种标准的、与基础设施无关的方法，用于描述跨混合环境、云甚至边缘设备的应用部署。该模型要解决的核心问题是如何组成分布式应用程序，然后成功地将其交给负责操作的人员。问题不在于如何编写程序，而在于如何采用面向服务（或面向微服务）架构的组件，并简化围绕此类应用的工作流程。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iac/oam/featured.png" />
    </item>
    
    <item>
      <title>iot 相关 dsl</title>
      <link>https://WFUing.github.io/posts/language/dsl/iot-dsl/</link>
      <pubDate>Thu, 16 Nov 2023 21:46:20 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/dsl/iot-dsl/</guid>
      <description>vorto # InformationModel: &amp;#39;vortolang&amp;#39; 1.</description>
      
    </item>
    
    <item>
      <title>as a Service 模型</title>
      <link>https://WFUing.github.io/posts/architecture/aas/</link>
      <pubDate>Thu, 16 Nov 2023 16:47:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/aas/</guid>
      <description>&amp;ldquo;Aas&amp;rdquo; 是一种缩写，代表了一系列与计算机和信息技术相关的服务模型。以下是一些常见的 &amp;ldquo;as a Service&amp;rdquo;（Aas）模型：</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/aas/featured.jpg" />
    </item>
    
    <item>
      <title>IaC基本概念</title>
      <link>https://WFUing.github.io/posts/architecture/iac/concept/</link>
      <pubDate>Thu, 16 Nov 2023 10:47:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iac/concept/</guid>
      <description>基础架构即代码（IaC）是通过机器可读的定义文件而不是物理硬件配置或交互式配置工具来管理和配置计算机数据中心资源的过程。定义可以在版本控制系统中。定义文件中的代码可以使用脚本或声明式定义，而不是通过人工流程来维护代码，但 IaC 更经常使用声明式方法。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iac/concept/featured.jpg" />
    </item>
    
    <item>
      <title>《黑客与画家》读书笔记</title>
      <link>https://WFUing.github.io/read/%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6/</link>
      <pubDate>Sun, 12 Nov 2023 19:16:22 +0800</pubDate>
      
      <guid>https://WFUing.github.io/read/%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6/</guid>
      <description>聚焦于计算机科学、创新和创业，探讨了黑客文化、编程艺术、创意思维以及成功企业的共同特质。书中通过一系列独立的随笔和观点，呈现了作者对技术、艺术和创业的独到见解。适合对计算机科学、创新和创业感兴趣的读者。尤其对那些想要了解黑客文化、程序员思维方式，以及创业者在技术领域取得成功的人群。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/read/%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6/featured.png" />
    </item>
    
    <item>
      <title>Java类加载机制</title>
      <link>https://WFUing.github.io/posts/language/java/class-loader/</link>
      <pubDate>Tue, 07 Nov 2023 23:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/java/class-loader/</guid>
      <description>字节码文件需要经过加载，链接（包括验证、准备、解析），初始化才能转为类，然后才能根据类来创建对象</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/java/class-loader/featured.png" />
    </item>
    
    <item>
      <title>Junit 运行流程</title>
      <link>https://WFUing.github.io/posts/language/java/junit/</link>
      <pubDate>Sun, 05 Nov 2023 18:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/java/junit/</guid>
      <description>Junit 是由 Kent Beck 和 Erich Gamma 于 1995 年底着手编写的框架，自此以后，Junit 框架日益普及，现在已经成为单元测试 Java 应用程序的事实上的标准。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/java/junit/featured.png" />
    </item>
    
    <item>
      <title>Netty</title>
      <link>https://WFUing.github.io/posts/reviews/network/netty/</link>
      <pubDate>Wed, 01 Nov 2023 18:53:17 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/network/netty/</guid>
      <description>Netty 是 JBoss 开源项目，是异步的、基于事件驱动的网络应用框架，以高性能、高并发著称。Netty 是基于 Java NIO 构建出来的，主要用于开发基于 TCP 协议的网络 IO 程序。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/network/netty/featured.jpeg" />
    </item>
    
    <item>
      <title>HTTPS RSA 握手解析</title>
      <link>https://WFUing.github.io/posts/reviews/network/https-rsa/</link>
      <pubDate>Wed, 01 Nov 2023 09:43:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/network/https-rsa/</guid>
      <description></description>
      
    </item>
    
    <item>
      <title>HTTP-1 HTTPS HTTP-2 HTTP-3</title>
      <link>https://WFUing.github.io/posts/reviews/network/http123-https/</link>
      <pubDate>Tue, 31 Oct 2023 14:43:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/network/http123-https/</guid>
      <description>HTTP # HTTP 基本概念 # HTTP 是什么？ # HTTP 是超文本传输协议，也就是HyperText Transfer Protocol。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/network/http123-https/featured.webp" />
    </item>
    
    <item>
      <title>langium简介</title>
      <link>https://WFUing.github.io/posts/language/dsl/langium/</link>
      <pubDate>Tue, 31 Oct 2023 10:46:20 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/dsl/langium/</guid>
      <description>Usage # 1 Langium download # https://www.</description>
      
    </item>
    
    <item>
      <title>vscode-language-server</title>
      <link>https://WFUing.github.io/posts/language/dsl/vscode-language-server/</link>
      <pubDate>Tue, 31 Oct 2023 10:46:20 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/dsl/vscode-language-server/</guid>
      <description>Resource # Protocol specification https://microsoft.</description>
      
    </item>
    
    <item>
      <title>xtext简介</title>
      <link>https://WFUing.github.io/posts/language/dsl/xtext/</link>
      <pubDate>Tue, 31 Oct 2023 10:46:20 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/dsl/xtext/</guid>
      <description>Usage # 项目创建 # XText 开发一个新的语言</description>
      
    </item>
    
    <item>
      <title>一次完整的HTTP请求过程</title>
      <link>https://WFUing.github.io/posts/reviews/network/http-process/</link>
      <pubDate>Mon, 30 Oct 2023 19:43:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/network/http-process/</guid>
      <description>Resources # 小林coding 3.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/network/http-process/featured.png" />
    </item>
    
    <item>
      <title>快速入门 Akka Java 指南</title>
      <link>https://WFUing.github.io/posts/architecture/iot/akka-java/</link>
      <pubDate>Mon, 30 Oct 2023 09:16:13 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iot/akka-java/</guid>
      <description>Akka 是一个用于在 JVM 上构建高并发、分布式和可容错的事件驱动应用程序的运行时工具包。Akka 既可以用于 Java，也可以用于 Scala。本指南通过描述 Java 版本的&lt;code&gt;Hello World&lt;/code&gt;示例来介绍 Akka。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iot/akka-java/featured.png" />
    </item>
    
    <item>
      <title>术语与概念</title>
      <link>https://WFUing.github.io/posts/architecture/iot/concept/</link>
      <pubDate>Sat, 28 Oct 2023 22:05:13 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iot/concept/</guid>
      <description>试图建立一个通用的术语来定义一个坚实的基础以对并发、分布式系统这些 Akka 的目标问题展开交流。请注意，对于这些术语并没有一个统一的定义。我们只是为了寻找一些可行的定义以便在整个文档中进行引用。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iot/concept/featured.png" />
    </item>
    
    <item>
      <title>响应式宣言(Reactive Manifesto)</title>
      <link>https://WFUing.github.io/posts/architecture/iot/reactive-manifesto/</link>
      <pubDate>Sat, 28 Oct 2023 21:16:13 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iot/reactive-manifesto/</guid>
      <description>响应式系统具有响应性、复原性、弹性和消息驱动性。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iot/reactive-manifesto/featured.png" />
    </item>
    
    <item>
      <title>akka框架</title>
      <link>https://WFUing.github.io/posts/architecture/iot/akka/</link>
      <pubDate>Fri, 27 Oct 2023 09:16:13 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iot/akka/</guid>
      <description>Akka 是一个开源项目，基于 Apache 2 License。AKKA框架是用Scala写的，主要用于高并发与分布式应用，目前已经得到广泛地运用，例如Spark、Spray等框架在底层都使用了AKKA进行并发处理。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iot/akka/featured.png" />
    </item>
    
    <item>
      <title>Markdown公式语法.md</title>
      <link>https://WFUing.github.io/posts/skills/markdown%E5%85%AC%E5%BC%8F%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Mon, 23 Oct 2023 16:25:26 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/skills/markdown%E5%85%AC%E5%BC%8F%E8%AF%AD%E6%B3%95/</guid>
      <description>一、公式使用参考 # 1．如何插入公式 # $ \LaTeX $ 的数学公式有两种：行中公式和独立公式。行中公式放在文中与其它文字混编，独立公式单独成行。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/skills/markdown%E5%85%AC%E5%BC%8F%E8%AF%AD%E6%B3%95/featured.png" />
    </item>
    
    <item>
      <title>一、机器学习概论</title>
      <link>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%B8%80%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%AE%BA/</link>
      <pubDate>Mon, 23 Oct 2023 16:25:26 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%B8%80%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%AE%BA/</guid>
      <description>机器学习是什么 # 机器学习就是让机器能自动找到一个函数function</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%B8%80%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%AE%BA/featured.png" />
    </item>
    
    <item>
      <title>七、Convolutional Neural Network</title>
      <link>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%B8%83convolutional-neural-network/</link>
      <pubDate>Mon, 23 Oct 2023 16:25:26 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%B8%83convolutional-neural-network/</guid>
      <description>7.1 CNN入门详解 # 卷积神经网络（CNN）常常被用来做图像处理，当然也可以用一般的神经网络，那它们各自有什么优缺点呢？</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%B8%83convolutional-neural-network/featured.png" />
    </item>
    
    <item>
      <title>三、梯度下降</title>
      <link>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%B8%89%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D/</link>
      <pubDate>Mon, 23 Oct 2023 16:25:26 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%B8%89%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D/</guid>
      <description>梯度下降伪代码 # 梯度下降可以优化损失函数的值，使其尽量小，即可找到最好（在数据集上拟合效果最好）的模型参数。现在假设模型 $f$ 中只有一个参数 $w$ ，则损失函数为 $L(f) = L(w)$ ，梯度下降算法如下（若模型有多个参数，按相同方法更新各方法）</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%B8%89%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D/featured.png" />
    </item>
    
    <item>
      <title>二、回归模型</title>
      <link>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%BA%8C%E5%9B%9E%E5%BD%92%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Mon, 23 Oct 2023 16:25:26 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%BA%8C%E5%9B%9E%E5%BD%92%E6%A8%A1%E5%9E%8B/</guid>
      <description>2.1 线性回归模型 # 回归模型应用案例 # 股票市场预测（Stock Market Forecast）：预测某个公司明天的股票情况 自动驾驶车（Self-Driving Car）：预测方向盘的转动角度 推荐系统（Recommendation）：预测某用户购买某商品的可能性 线性回归模型（Linear Regression Model） # 形式如下： $y= f(x) = w \cdot x + b $</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%BA%8C%E5%9B%9E%E5%BD%92%E6%A8%A1%E5%9E%8B/featured.png" />
    </item>
    
    <item>
      <title>五、深度学习</title>
      <link>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%BA%94%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Mon, 23 Oct 2023 16:25:26 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%BA%94%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</guid>
      <description>5.1引言 # 深度学习的历史 # 1958年：心理学家Rosenblatt提出感知机（Perceptron） 它是一个线性模型。 1969年：有人说感知机是线性模型，具有局限性。 1980年代：多层感知机（Multi-layer Perceptron） 和当今的神经网络是没有本质差别的。 1986年：Hinton提出反向传播算法（Backpropagation） 但是超过3个隐藏层的神经网络，还是训练不出好的结果。 1989年：有人提出一个隐藏层就可以得到任何函数，为什么要多层？ 多层感知机慢慢淡出大家的视野。 2006年：受限玻尔兹曼机初始化（RBM Initialization） Hinton提出用受限玻尔兹曼机做初始化，很多人觉得这是个大突破，但实际上用处并不大。 至少让多层感知机回到大家的视野。 2009年：GPU 2011年：神经网络用于语音识别 2012年：神经网络技术赢得ILSVRC（ImageNet Large Scale Visual Recognition Challenge） 深度学习的三个步骤 # 和机器学习一样：</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%BA%94%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/featured.png" />
    </item>
    
    <item>
      <title>六、Tips for Training DNN</title>
      <link>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E5%85%ADtips-for-training-dnn/</link>
      <pubDate>Mon, 23 Oct 2023 16:25:26 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E5%85%ADtips-for-training-dnn/</guid>
      <description>6.1 神经网络训练问题与解决方案 # 明确问题类型及其对应方法 # 在深度学习中，一般有两种问题：</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/li-hongyis-notes/%E5%85%ADtips-for-training-dnn/featured.png" />
    </item>
    
    <item>
      <title>四、分类模型</title>
      <link>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E5%9B%9B%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Mon, 23 Oct 2023 16:25:26 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E5%9B%9B%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9E%8B/</guid>
      <description>4.1 分类简介及其与回归的区别 # 分类模型应用案例（Classification Cases） # 信用评分（Credit Scoring） 输入：收入、储蓄、职业、年龄、信用历史等等 输出：是否贷款 医疗诊断（Medical Diagnosis） 输入：现在症状、年龄、性别、病史 输出：哪种疾病 手写文字识别（Handwritten Character Recognition） 输入：文字图片 输出：是哪一个汉字 人脸识别（Face Recognition） 输入：面部图片 输出：是哪个人 把分类当成回归去做 # 不行</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/li-hongyis-notes/%E5%9B%9B%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9E%8B/featured.png" />
    </item>
    
    <item>
      <title>cluster.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/stdlib/cluster/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/stdlib/cluster/</guid>
      <description>cluster 模块 # cluster模块用于组建 Node.</description>
      
    </item>
    
    <item>
      <title>events.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/stdlib/events/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/stdlib/events/</guid>
      <description>events 模块 # Node 通过 events 模块提供事件，形成模块之间的通信机制，消除模块与模块的强耦合。</description>
      
    </item>
    
    <item>
      <title>http.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/stdlib/http/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/stdlib/http/</guid>
      <description>http 模块 # http模块用于 HTTP 通信。</description>
      
    </item>
    
    <item>
      <title>os.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/stdlib/os/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/stdlib/os/</guid>
      <description>os 模块 # cpus属性返回一个数组，每个成员对应一个 CPU 内核。下面代码可以获取本机的 CPU 内核数目。</description>
      
    </item>
    
    <item>
      <title>process.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/stdlib/process/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/stdlib/process/</guid>
      <description>process 对象 # process对象是 Node 原生提供的对象，表示当前运行的 Node 进程。它不用引入模块，可以直接使用。</description>
      
    </item>
    
    <item>
      <title>npm-update.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/npm/npm-update/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:22 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/npm/npm-update/</guid>
      <description>npm update # 更新所有依赖项。</description>
      
    </item>
    
    <item>
      <title>npm-version.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/npm/npm-version/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:22 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/npm/npm-version/</guid>
      <description>npm version # npm version用来指定模块的版本，然后会将新的版本号写入package.</description>
      
    </item>
    
    <item>
      <title>npm-view.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/npm/npm-view/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:22 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/npm/npm-view/</guid>
      <description>npm view 命令 # 查看某个模块发布过的所有版本。</description>
      
    </item>
    
    <item>
      <title>npm-whoami.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/npm/npm-whoami/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:22 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/npm/npm-whoami/</guid>
      <description>npm whoami # npm whoami命令返回当前登录的 npm 用户名。</description>
      
    </item>
    
    <item>
      <title>npx.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/npm/npx/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:22 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/npm/npx/</guid>
      <description>npx 使用教程 # npm 从5.</description>
      
    </item>
    
    <item>
      <title>package.json.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/npm/package.json/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:22 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/npm/package.json/</guid>
      <description>package.json # files 字段 # files字段是一个数组，里面指定了一组文件。当模块发布到 NPM 网站时，这组文件会被包括。这个字段是可选的，如果没有指定内容，那么发布时所有文件都会被包括在内。如果files字段包含目录名，该目录里面的所有文件都会被计入。</description>
      
    </item>
    
    <item>
      <title>publish.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/npm/publish/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:22 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/npm/publish/</guid>
      <description>发布 # 发布标签 # npm 支持为版本打上标签，这叫做发布标签（dist-tag）。如果不指定发布标签，默认就是latest。用户下载模块时，默认安装的就是latest标签指向的版本。</description>
      
    </item>
    
    <item>
      <title>scripts.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/npm/scripts/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:22 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/npm/scripts/</guid>
      <description>脚本功能 # npm run # npm不仅可以用于模块管理，还可以用于执行脚本。package.</description>
      
    </item>
    
    <item>
      <title>yarn.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/npm/yarn/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:22 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/npm/yarn/</guid>
      <description>Yarn 的用法 # 简介 # Yarn 是 Facebook 联合其他大公司推出的模块管理器。相比 npm，它有两个显著特点。</description>
      
    </item>
    
    <item>
      <title>basic.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/npm/basic/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:21 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/npm/basic/</guid>
      <description>概述 # npm有两种含义。</description>
      
    </item>
    
    <item>
      <title>install.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/npm/install/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:21 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/npm/install/</guid>
      <description>安装 # npm install # 基本用法 # npm install命令用于安装模块。npm i是该命令的别名。</description>
      
    </item>
    
    <item>
      <title>npm-exec.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/npm/npm-exec/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:21 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/npm/npm-exec/</guid>
      <description>npm exec 命令 # npm exec用来执行某个 npm 模块的内部命令，不管该模块在本地还是在远程。它有一个别名x，即npm exec等同于npm x。</description>
      
    </item>
    
    <item>
      <title>npm-init.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/npm/npm-init/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:21 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/npm/npm-init/</guid>
      <description>npm init 命令 # npm init命令的作用，是生成package.</description>
      
    </item>
    
    <item>
      <title>npm-link.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/npm/npm-link/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:21 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/npm/npm-link/</guid>
      <description>npm link 命令 # 有时候，我们在本地修改了一些模块，想先测试这些修改是否有效。那么，怎么才能让依赖于该模块的应用，能够加载这些本地模块呢？</description>
      
    </item>
    
    <item>
      <title>npm-tag.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/npm/npm-tag/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:21 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/npm/npm-tag/</guid>
      <description>npm tag # npm 允许为版本添加标签，方便用户安装特定版本。只要指定标签，就可以安装该标签下的最新版本。</description>
      
    </item>
    
    <item>
      <title>npm-token.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/npm/npm-token/</link>
      <pubDate>Mon, 23 Oct 2023 16:19:21 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/npm/npm-token/</guid>
      <description>npm token # npm token命令用来管理认证令牌。</description>
      
    </item>
    
    <item>
      <title>timer</title>
      <link>https://WFUing.github.io/posts/language/nodejs/timer/</link>
      <pubDate>Mon, 23 Oct 2023 16:17:20 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/timer/</guid>
      <description>定时器 # process.</description>
      
    </item>
    
    <item>
      <title>fs</title>
      <link>https://WFUing.github.io/posts/language/nodejs/fs/</link>
      <pubDate>Mon, 23 Oct 2023 16:17:19 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/fs/</guid>
      <description>fs 模块 # fs.</description>
      
    </item>
    
    <item>
      <title>promise</title>
      <link>https://WFUing.github.io/posts/language/nodejs/promise/</link>
      <pubDate>Mon, 23 Oct 2023 16:17:19 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/promise/</guid>
      <description>Promise # UnhandledPromiseRejectionWarning # 如果 Promise 运行过程中抛出错误，或者状态变为rejected，但是没有相应的处理代码，那么 Node 会抛出一个警告UnhandledPromiseRejectionWarning。</description>
      
    </item>
    
    <item>
      <title>repl</title>
      <link>https://WFUing.github.io/posts/language/nodejs/repl/</link>
      <pubDate>Mon, 23 Oct 2023 16:17:19 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/repl/</guid>
      <description>Node 的 REPL 环境 # 简介 # REPL 是 read-eval-print-loop 的缩写，表示命令行下的 Node 引擎的一个互动式对话环境。用户在其中输入命令，就可以立刻看到结果。read 表示读取用户的输入，eval 表示执行，print 表示输出运行的结果，loop 表示重复执行这个过程。</description>
      
    </item>
    
    <item>
      <title>this.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/module/this/</link>
      <pubDate>Mon, 23 Oct 2023 16:16:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/module/this/</guid>
      <description>this 变量 # Node 应用的顶层变量是global，对应浏览器的window变量。</description>
      
    </item>
    
    <item>
      <title>Tencentyun Serverless Api</title>
      <link>https://WFUing.github.io/posts/architecture/serverless/tencentyun-serverless-api/</link>
      <pubDate>Fri, 20 Oct 2023 13:12:03 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/serverless/tencentyun-serverless-api/</guid>
      <description>腾讯云官方推荐并提供了使用控制台和使用Serverless 组件（Tencent Serverless Cloud Framework）两种方式用于管理云函数，分别在浏览器中和本地CLI中进行开发</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/serverless/tencentyun-serverless-api/featured.png" />
    </item>
    
    <item>
      <title>Alicloud Function Compute API</title>
      <link>https://WFUing.github.io/posts/architecture/serverless/alicloud-fc-api/</link>
      <pubDate>Fri, 20 Oct 2023 12:47:12 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/serverless/alicloud-fc-api/</guid>
      <description>函数计算（Function Compute）是一个事件驱动的全托管 Serverless 计算服务，您无需管理服务器等基础设施，只需编写代码并上传，函数计算会为您准备好计算资源，并以弹性、可靠的方式运行您的代码。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/serverless/alicloud-fc-api/featured.png" />
    </item>
    
    <item>
      <title>Git Principle</title>
      <link>https://WFUing.github.io/posts/devoops/git/git-principle/</link>
      <pubDate>Thu, 19 Oct 2023 20:58:09 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/devoops/git/git-principle/</guid>
      <description>Git 和其它版本控制系统（包括 Subversion 和近似工具）的主要差别在于 Git 对待数据的方式。 从概念上来说，其它大部分系统以文件变更列表的方式存储信息，而 Git 是把数据看作是对小型文件系统的一系列快照。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/devoops/git/git-principle/feature.png" />
    </item>
    
    <item>
      <title>Git Tutorial</title>
      <link>https://WFUing.github.io/posts/devoops/git/git-tutorial/</link>
      <pubDate>Thu, 19 Oct 2023 20:40:43 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/devoops/git/git-tutorial/</guid>
      <description>Git 帮助手册 # 国外网友制作了一张 Git Cheat Sheet，总结很精炼，各位不妨收藏一下。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/devoops/git/git-tutorial/featured.png" />
    </item>
    
    <item>
      <title>Shell 简介</title>
      <link>https://WFUing.github.io/posts/skills/shell/</link>
      <pubDate>Thu, 19 Oct 2023 11:47:47 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/skills/shell/</guid>
      <description>Shell 是一个用 C 语言编写的程序，是用户使用 Linux 的桥梁，它既是一种命令语言，又是一种程序设计语言。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/skills/shell/featured.png" />
    </item>
    
    <item>
      <title>Functional Programming</title>
      <link>https://WFUing.github.io/posts/language/functional-programming/</link>
      <pubDate>Wed, 18 Oct 2023 20:14:26 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/functional-programming/</guid>
      <description>我们将注意力转向过程抽象，这是一种将复杂程序分解成 functions (也称为 procedures 或 subroutines 。这些术语在不同语境中的用法有细微差别，但就我们的目的而言，我们将把它们视为同义词) 形式的较小代码片段的策略。函数将某些计算封装在一个接口之后，与任何抽象概念一样，函数的用户只需知道函数做了什么，而不需要知道函数是如何完成计算的。函数还通过接收影响其计算的参数来概括计算。计算的结果就是函数的返回值。</description>
      
    </item>
    
    <item>
      <title>《人件》读书笔记</title>
      <link>https://WFUing.github.io/read/%E4%BA%BA%E4%BB%B6/</link>
      <pubDate>Wed, 18 Oct 2023 13:16:22 +0800</pubDate>
      
      <guid>https://WFUing.github.io/read/%E4%BA%BA%E4%BB%B6/</guid>
      <description>软件开发不仅仅是技术问题，更是管理问题。它强调了管理人力资源的关键性，特别是在软件领域，由于脑力劳动的特性，软件开发者与传统的体力劳动者有很大的不同。这本书提供了许多实际的管理方法，以促进团队协作，提高生产效率，同时提供了实例和案例来支持这些观点。该书的主要目标读者是软件组织的管理者，项目经理，团队领导者以及任何对软件开发和团队管理感兴趣的人。它适用于各种软件开发项目，从小型创业公司到大型企业。这本书提供的原则和实践可以适用于各种团队管理场景，不仅限于软件开发。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/read/%E4%BA%BA%E4%BB%B6/featured.png" />
    </item>
    
    <item>
      <title>Serverless Dev</title>
      <link>https://WFUing.github.io/posts/architecture/serverless/serverless-dev/</link>
      <pubDate>Tue, 17 Oct 2023 11:47:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/serverless/serverless-dev/</guid>
      <description>Serverless Devs 是一个开源开放的 Serverless 开发者平台，致力于为开发者提供强大的工具链体系。通过该平台，开发者不仅可以一键体验多云 Serverless 产品，极速部署 Serverless 项目，还可以在 Serverless 应用全生命周期进行项目的管理，并且非常简单快速的将 Serverless Devs 与其他工具/平台进行结合，进一步提升研发、运维效能。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/serverless/serverless-dev/featured.jpeg" />
    </item>
    
    <item>
      <title>Serverless Concept Models</title>
      <link>https://WFUing.github.io/posts/architecture/serverless/serverless-concept-models/</link>
      <pubDate>Tue, 17 Oct 2023 10:47:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/serverless/serverless-concept-models/</guid>
      <description>Serverless 是一种计算模型，它使得开发者能够在无需管理服务器和基础架构的情况下运行代码（或称函数）。使用无服务器计算，开发者可以将代码上传到云平台，平台会在需要时根据流量自动进行资源分配和处理。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/serverless/serverless-concept-models/featured.png" />
    </item>
    
    <item>
      <title>meta-programming</title>
      <link>https://WFUing.github.io/posts/language/metaprogramming/</link>
      <pubDate>Mon, 16 Oct 2023 15:29:44 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/metaprogramming/</guid>
      <description>元编程是编写可在其他程序上运行的计算机程序的技术。诸如编译器和程序分析器之类的系统可以被视为元程序，因为它们将其他程序作为输入。我们将在这里讨论的元编程形式特别关注生成要作为程序一部分包含的代码。从某种意义上说，它们可以被认为是初级编译器。</description>
      
    </item>
    
    <item>
      <title>State Machine</title>
      <link>https://WFUing.github.io/posts/architecture/iot/state-machine/</link>
      <pubDate>Mon, 16 Oct 2023 11:16:13 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iot/state-machine/</guid>
      <description>有限状态机 (finite-state machine, FSM) 是一种抽象机器，在任何给定时间内都可以处于有限个状态中的一个状态。FSM 可以根据某些外部输入从一种状态转换到另一种状态，从一种状态转换到另一种状态称为转换。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iot/state-machine/featured.png" />
    </item>
    
    <item>
      <title>Antlr Code Generation</title>
      <link>https://WFUing.github.io/posts/language/code-generation/antlr-code-generation/</link>
      <pubDate>Sun, 15 Oct 2023 09:52:03 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/code-generation/antlr-code-generation/</guid>
      <description>ANTLR 是 &lt;strong&gt;AN&lt;/strong&gt;other &lt;strong&gt;T&lt;/strong&gt;ool for &lt;strong&gt;L&lt;/strong&gt;anguage &lt;strong&gt;R&lt;/strong&gt;ecognition 的缩写，是一个功能强大的解析器生成器框架，用于从语法文件中构建语言识别器、编译器和翻译器，语法文件中包含从源语言到目标语言的每个语句所要执行的操作。</description>
      
    </item>
    
    <item>
      <title>Programming Language List</title>
      <link>https://WFUing.github.io/posts/language/programming-language-pool/</link>
      <pubDate>Sat, 14 Oct 2023 19:29:44 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/programming-language-pool/</guid>
      <description>下面列出了所有类型的编程语言的完整分类列表。编程语言没有严格的分类方案。因此，我们可以将一种语言视为不止一种编程语言的示例。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/language/programming-language-pool/featured.png" />
    </item>
    
    <item>
      <title>Zookeeper Code</title>
      <link>https://WFUing.github.io/posts/architecture/distributed/zookeeper/zookeeper-code/</link>
      <pubDate>Sat, 14 Oct 2023 12:00:54 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/distributed/zookeeper/zookeeper-code/</guid>
      <description>Resources # 官方 ZooKeeper 官网 ZooKeeper 官方文档 ZooKeeper Github 博客 ZooKeeper源码阅读心得分享+源码基本结构+源码环境搭建 手摸手教你阅读和调试大型开源项目 ZooKeeper </description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/distributed/zookeeper/zookeeper-code/featured.png" />
    </item>
    
    <item>
      <title>Zookeeper 原理</title>
      <link>https://WFUing.github.io/posts/architecture/distributed/zookeeper/zookeeper-theory/</link>
      <pubDate>Fri, 13 Oct 2023 20:07:16 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/distributed/zookeeper/zookeeper-theory/</guid>
      <description>ZooKeeper 是 Apache 的顶级项目。ZooKeeper 为分布式应用提供了高效且可靠的分布式协调服务，提供了诸如统一命名服务、配置管理和分布式锁等分布式的基础服务。在解决分布式数据一致性方面，ZooKeeper 并没有直接采用 Paxos 算法，而是采用了名为 ZAB 的一致性协议。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/distributed/zookeeper/zookeeper-theory/featured.png" />
    </item>
    
    <item>
      <title>A Modeling Editor and Code Generator for message-driven architectures with AsyncAPI</title>
      <link>https://WFUing.github.io/posts/language/code-generation/asyncapi-code-generator/</link>
      <pubDate>Fri, 13 Oct 2023 17:27:37 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/code-generation/asyncapi-code-generator/</guid>
      <description>Background # IIoT（工业物联网）架构通常是分布式和异步的，通信由事件驱动，如消息的发布（和相应的订阅）。这些异步架构提高了可扩展性和对变化的耐受性，但也引发了互操作性问题，因为架构各元素之间对消息内部结构及其分类（主题）的明确知识被稀释了。</description>
      
    </item>
    
    <item>
      <title>Openapi Code Generator</title>
      <link>https://WFUing.github.io/posts/language/code-generation/openapi-code-generator/</link>
      <pubDate>Fri, 13 Oct 2023 16:46:21 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/code-generation/openapi-code-generator/</guid>
      <description>OpenAPI Generator 可根据 OpenAPI yaml 规范生成代码，并支持多种语言。</description>
      
    </item>
    
    <item>
      <title>Restful API Tutorial</title>
      <link>https://WFUing.github.io/posts/reviews/network/restful/</link>
      <pubDate>Fri, 13 Oct 2023 13:19:27 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/network/restful/</guid>
      <description>REST 全称是 &lt;strong&gt;Re&lt;/strong&gt;presentational &lt;strong&gt;S&lt;/strong&gt;tate &lt;strong&gt;T&lt;/strong&gt;ransfer（表现层状态转化），更具体的全称是 Resource Representational State Transfer（资源表现层状态转化），具体可以见 Roy Thomas Fielding 的博士论文</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/network/restful/featured.png" />
    </item>
    
    <item>
      <title>交叉熵</title>
      <link>https://WFUing.github.io/posts/ai/cross-entropy/</link>
      <pubDate>Fri, 13 Oct 2023 09:25:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/cross-entropy/</guid>
      <description>案例驱动 # 通过几个简单的例子来解释和总结什么是交叉熵（Cross Entropy）以及机器学习分类问题中为什么使用交叉熵。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/cross-entropy/featured.png" />
    </item>
    
    <item>
      <title>现有大模型</title>
      <link>https://WFUing.github.io/posts/ai/llm-demos/</link>
      <pubDate>Fri, 13 Oct 2023 09:25:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/llm-demos/</guid>
      <description>现有大模型</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/llm-demos/featured.png" />
    </item>
    
    <item>
      <title>Actor Model</title>
      <link>https://WFUing.github.io/posts/architecture/iot/actor-model/</link>
      <pubDate>Fri, 13 Oct 2023 09:16:13 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iot/actor-model/</guid>
      <description>CPU 上有多个内核。如果我们想充分利用现有的这些硬件，就需要一种并发运行代码的方法。数十年来无法追踪的错误和开发人员的沮丧都表明，线程并不是解决问题的办法。不过不用担心，我们还有其他很好的选择，今天我要向你展示的就是其中之一：actor model。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iot/actor-model/featured.png" />
    </item>
    
    <item>
      <title>AI Code Generators</title>
      <link>https://WFUing.github.io/posts/language/code-generation/ai-code-generators/</link>
      <pubDate>Thu, 12 Oct 2023 20:13:50 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/code-generation/ai-code-generators/</guid>
      <description>Resources # Demos https://github.</description>
      
    </item>
    
    <item>
      <title>How to Write a Git Commit Message</title>
      <link>https://WFUing.github.io/posts/devoops/git/how-to-write-a-git-commit-message/</link>
      <pubDate>Thu, 12 Oct 2023 19:47:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/devoops/git/how-to-write-a-git-commit-message/</guid>
      <description>Resources # git tutorial: https://wyag.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/devoops/git/how-to-write-a-git-commit-message/featured.png" />
    </item>
    
    <item>
      <title>45 个常用Linux 命令，让你轻松玩转Linux！</title>
      <link>https://WFUing.github.io/posts/reviews/os/linux-instructions/</link>
      <pubDate>Thu, 12 Oct 2023 19:43:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/os/linux-instructions/</guid>
      <description>Linux 的命令确实非常多，然而熟悉 Linux 的人从来不会因为 Linux 的命令太多而烦恼。因为我们仅仅只需要掌握常用命令，就完全可以驾驭 Linux。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/os/linux-instructions/featured.jpeg" />
    </item>
    
    <item>
      <title>chatGPT 使用指南</title>
      <link>https://WFUing.github.io/posts/ai/chatgpt-guide/</link>
      <pubDate>Thu, 12 Oct 2023 19:43:45 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/chatgpt-guide/</guid>
      <description>Six strategies for getting better results # Write clear instructions # GPT 无法读懂你的心思。如果产出太长，请要求简短回复。如果结果太简单，要求专家级的写作。如果您不喜欢格式，请演示您希望看到的格式。GPT 越少需要猜测你想要什么，你就越有可能得到它。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/chatgpt-guide/featured.png" />
    </item>
    
    <item>
      <title>Frp Nat Traversal</title>
      <link>https://WFUing.github.io/posts/skills/frp-nat-traversal/</link>
      <pubDate>Thu, 12 Oct 2023 19:38:48 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/skills/frp-nat-traversal/</guid>
      <description>Frp是一款开源的内网穿透工具，可实现将内部网络服务暴露给外部网络访问。它通过服务器端和客户端配合工作，服务器端位于外网，客户端位于内网，通过建立反向代理通道实现数据传输。Frp支持TCP、UDP、HTTP等协议，具有简单易用、配置灵活、跨平台等特点，常用于搭建家庭服务器、内网访问、远程调试等场景。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/skills/frp-nat-traversal/featured.png" />
    </item>
    
    <item>
      <title>Telosys: a Code Generation Tool by Laurent Guerin</title>
      <link>https://WFUing.github.io/posts/language/code-generation/telosys-code-generation-tool/</link>
      <pubDate>Thu, 12 Oct 2023 19:29:44 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/code-generation/telosys-code-generation-tool/</guid>
      <description>Resources # url: https://www.</description>
      
    </item>
    
    <item>
      <title>《人月神话》阅读笔记</title>
      <link>https://WFUing.github.io/read/%E4%BA%BA%E6%9C%88%E7%A5%9E%E8%AF%9D/</link>
      <pubDate>Thu, 12 Oct 2023 19:16:22 +0800</pubDate>
      
      <guid>https://WFUing.github.io/read/%E4%BA%BA%E6%9C%88%E7%A5%9E%E8%AF%9D/</guid>
      <description>旨在深入探讨软件工程中的管理和工程问题的经典著作。本书强调了软件开发过程中的复杂性和挑战，尤其是在大规模项目中。书中还探讨了许多经典观点，如&amp;quot;人月神话&amp;quot;、&amp;ldquo;二八定律&amp;quot;和&amp;quot;沟通成本&amp;rdquo;，为软件行业的专业人员提供了宝贵的见解和管理原则，使他们能够更好地理解和应对软件项目的挑战。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/read/%E4%BA%BA%E6%9C%88%E7%A5%9E%E8%AF%9D/featured.png" />
    </item>
    
    <item>
      <title>DevOps 简介</title>
      <link>https://WFUing.github.io/posts/devoops/overview/</link>
      <pubDate>Thu, 12 Oct 2023 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/devoops/overview/</guid>
      <description>DevOps 集文化理念、实践和工具于一身，它强调团队授权、跨团队沟通和协作以及技术自动化，其最终目标是优化质量和交付</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/devoops/overview/featured.png" />
    </item>
    
    <item>
      <title>Leetcode</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/leetcode/</link>
      <pubDate>Thu, 12 Oct 2023 17:05:17 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/leetcode/</guid>
      <description>数组 # 【LeetCode 135】 分发糖果 【LeetCode 6】Z 字形变换 动态规划 # 【LeetCode 55】跳跃游戏 【LeetCode 72】编辑距离 【LeetCode 115】不同的子序列 【LeetCode 124】二叉树中的最大路径和 【LeetCode 174】地下城游戏 【LeetCode 188】买卖股票的最佳时机IV 【LeetCode 198】打家劫舍 【LeetCode 213】打家劫舍II 【LeetCode 233】数字1的个数 【LeetCode 300】最长递增子序列 【LeetCode 309】最佳买卖股票时机含冷冻期 【LeetCode 312】戳气球 【LeetCode 337】打家劫舍III 【LeetCode 354】俄罗斯套娃信封问题 【LeetCode 368】最大整除子集 【LeetCode 376】摆动序列 【LeetCode 390】消除游戏 【LeetCode 446】等差数列划分 II - 子序列 【LeetCode 583】两个字符串的删除操作 【LeetCode 629】K个逆序对数组 【LeetCode 673】最长递增子序列的个数 【LeetCode 689】三个无重叠子数组的最大和 【LeetCode 714】买卖股票的最佳时机含手续费 【LeetCode 740】删除并获得点数 【LeetCode 907】子数组的最小值之和 【LeetCode 943】最短超级串 【LeetCode 978】最长湍流子数组 【LeetCode 1031】两个非重叠子数组的最大和 【LeetCode 1035】不相交的线 【LeetCode 1039】多边形三角剖分的最低得分 【LeetCode 1143】最长公共子序列 【LeetCode 1186】删除一次得到子数组最大和 【LeetCode 1218】最长定差子序列 【LeetCode 1473】粉刷房子 III 【LeetCode 1713】得到子序列的最少操作次数 【LeetCode 系列】买卖股票的最佳时机 【LeetCode 面试题 08.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/leetcode/featured.png" />
    </item>
    
    <item>
      <title>Code generation for Langium-based DSLs</title>
      <link>https://WFUing.github.io/posts/language/code-generation/code-generation-for-langium-based-dsls/</link>
      <pubDate>Thu, 12 Oct 2023 14:43:44 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/code-generation/code-generation-for-langium-based-dsls/</guid>
      <description>DSL 和 DSL 工具的一个重要方面是代码生成。DSL 本身在形式化、指定和交流内容方面具有优势，因为它们具有特定领域的性质。但是，如果能从指定的内容中推导出实现代码，就能大大提高工作效率。</description>
      
    </item>
    
    <item>
      <title>Template Engine</title>
      <link>https://WFUing.github.io/posts/language/code-generation/template-engine/</link>
      <pubDate>Thu, 12 Oct 2023 14:43:44 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/code-generation/template-engine/</guid>
      <description>模板引擎 # 模板引擎（也称为模板处理器或模板解析器）是设计用于将模板与数据模型结合起来以生成结果文档的软件，编写模板所用的语言称为模板语言或模板语言。模板引擎通常作为 Web 模板系统或应用程序框架的一部分，也可以用作预处理器或过滤器。流行的模板引擎包括 Ejs、Jade、Pug、Mustache、HandlebarsJS、Jinja2 和 Blade。</description>
      
    </item>
    
    <item>
      <title>How to Build Github Blog With Hugo</title>
      <link>https://WFUing.github.io/posts/devoops/git/how-to-build-github-blog-with-hugo/</link>
      <pubDate>Thu, 12 Oct 2023 14:39:05 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/devoops/git/how-to-build-github-blog-with-hugo/</guid>
      <description>今天花了一点时间搭建了自己的GitHub的博客，当然咯，试验阶段总会发生很多乱七八糟的问题，记录下处理问题过程中几个比较 nice 的 blog</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/devoops/git/how-to-build-github-blog-with-hugo/featured.png" />
    </item>
    
    <item>
      <title>A Guide to Code Generation</title>
      <link>https://WFUing.github.io/posts/language/code-generation/a-guide-to-code-generation/</link>
      <pubDate>Thu, 12 Oct 2023 11:40:20 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/code-generation/a-guide-to-code-generation/</guid>
      <description>为什么要用代码生成 # productivity：使用代码生成，只需编写一次 generator ，就可以根据需要多次重复使用。向 generator 提供特定输入并调用它比手动编写代码要快得多，因此代码生成可以节省时间。 Simplification：通过代码生成，你可以从一些抽象的描述中生成代码。需要维护的部分变成了 generator 的输入部分，该部分通常是代码的描述，而不是代码本身，与整个生成的代码相比，该描述通常更容易分析和检查。 Portability：一旦你有了为某种语言或框架生成代码的程序，你就可以简单地更改 generator ，并以不同的语言或框架为目标。您还可以同时针对多个平台。 例如，使用解析器生成器，您可以获得 C#、Java 和 C++ 的 parser。 另一个例子：您可能会编写一个 UML 图表，然后使用代码生成器用 C# 创建一个骨架类，并用 SQL 代码为 MySQL 创建一个数据库。因此，相同的抽象描述可用于生成不同类型的工件。 Consistency：有了代码生成，你总能得到你所期望的代码。生成的代码是根据相同的原则设计的，命名规则等也是一致的。当然，除了生成器中的 bug 之外，代码总是能按照你所期望的方式运行，代码质量始终如一。如果用手工编写代码，不同的开发人员可能会使用不同的风格，即使是最重复的代码也会偶尔出现错误。 为什么不要用代码生成 # Maintenance：当您使用代码生成工具时，您的代码就会依赖于它。代码生成工具必须得到维护。如果你创建了它，你就必须不断更新它；如果你只是使用现有的工具，你就必须希望有人继续维护它，或者你必须自己接手。因此，代码生成的优势并不是免费的。如果你没有或找不到合适的能力来维护代码生成器，风险就会更大。 Complexity：自动生成的代码往往比手工编写的代码更复杂。有时，这与将不同部分连接在一起所需的胶水代码有关，或者与生成器支持的用例多于您所需的用例有关。在第二种情况下，生成的代码可以做比你想要的更多的事情，但这并不一定是一种优势。生成代码的优化程度肯定也不如手工编写的代码。有时这种差异很小，并不明显，但如果您的应用程序需要尽可能地提高性能，那么生成的代码对您来说可能并不是最佳选择。 如何使用代码生成?</description>
      
    </item>
    
    <item>
      <title>TODO</title>
      <link>https://WFUing.github.io/todo/</link>
      <pubDate>Sun, 01 Oct 2023 08:00:00 +0800</pubDate>
      
      <guid>https://WFUing.github.io/todo/</guid>
      <description></description>
      
    </item>
    
    <item>
      <title>1005SpellItRight</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1005spellitright/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1005spellitright/</guid>
      <description>1005 Spell It Right # 0、题目 # Given a non-negative integer $N$, your task is to compute the sum of all the digits of $N$, and output every digit of the sum in English.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1005spellitright/featured.png" />
    </item>
    
    <item>
      <title>1006SignInandSignOut模拟排序</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1006signinandsignout%E6%A8%A1%E6%8B%9F%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1006signinandsignout%E6%A8%A1%E6%8B%9F%E6%8E%92%E5%BA%8F/</guid>
      <description>1006 Sign In and Sign Out # 0、题目 # At the beginning of every day, the first person who signs in the computer room will unlock the door, and the last one who signs out will lock the door.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1006signinandsignout%E6%A8%A1%E6%8B%9F%E6%8E%92%E5%BA%8F/featured.png" />
    </item>
    
    <item>
      <title>1007MaximumSubsequenceSum动态规划</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1007maximumsubsequencesum%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1007maximumsubsequencesum%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid>
      <description>1007 Maximum Subsequence Sum # 0、题目 # Given a sequence of $K$ integers ${ N_1, N_2, &amp;hellip;, N_K }$.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1007maximumsubsequencesum%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/featured.png" />
    </item>
    
    <item>
      <title>1008Elevator</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1008elevator/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1008elevator/</guid>
      <description>1008 Elevator # 0、题目 # The highest building in our city has only one elevator.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1008elevator/featured.png" />
    </item>
    
    <item>
      <title>1009ProductofPolynomials模拟</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1009productofpolynomials%E6%A8%A1%E6%8B%9F/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1009productofpolynomials%E6%A8%A1%E6%8B%9F/</guid>
      <description>1009 Product of Polynomials # 0、题目 # This time, you are supposed to find $A×B$ where $A$ and $B$ are two polynomials.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1009productofpolynomials%E6%A8%A1%E6%8B%9F/featured.png" />
    </item>
    
    <item>
      <title>1010Radix二分</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1010radix%E4%BA%8C%E5%88%86/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1010radix%E4%BA%8C%E5%88%86/</guid>
      <description>1010 Radix # Given a pair of positive integers, for example, 6 and 110, can this equation 6 = 110 be true?</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1010radix%E4%BA%8C%E5%88%86/featured.png" />
    </item>
    
    <item>
      <title>1011WorldCupBetting</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1011worldcupbetting/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1011worldcupbetting/</guid>
      <description>1011 World Cup Betting # 0、题目 # With the 2010 FIFA World Cup running, football fans the world over were becoming increasingly excited as the best players from the best teams doing battles for the World Cup trophy in South Africa.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1011worldcupbetting/featured.png" />
    </item>
    
    <item>
      <title>1012TheBestRank排序</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1012thebestrank%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1012thebestrank%E6%8E%92%E5%BA%8F/</guid>
      <description>1012 The Best Rank # 0、题目 # To evaluate the performance of our first year CS majored students, we consider their grades of three courses only: C - C Programming Language, M - Mathematics (Calculus or Linear Algrbra), and E - English.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1012thebestrank%E6%8E%92%E5%BA%8F/featured.png" />
    </item>
    
    <item>
      <title>1013BattleOverCities图并查集求连通子集</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1013battleovercities%E5%9B%BE%E5%B9%B6%E6%9F%A5%E9%9B%86%E6%B1%82%E8%BF%9E%E9%80%9A%E5%AD%90%E9%9B%86/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1013battleovercities%E5%9B%BE%E5%B9%B6%E6%9F%A5%E9%9B%86%E6%B1%82%E8%BF%9E%E9%80%9A%E5%AD%90%E9%9B%86/</guid>
      <description>1013 Battle Over Cities # 0、题目 # It is vitally important to have all the cities connected by highways in a war.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1013battleovercities%E5%9B%BE%E5%B9%B6%E6%9F%A5%E9%9B%86%E6%B1%82%E8%BF%9E%E9%80%9A%E5%AD%90%E9%9B%86/featured.png" />
    </item>
    
    <item>
      <title>1014WaitinginLine模拟</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1014waitinginline%E6%A8%A1%E6%8B%9F/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1014waitinginline%E6%A8%A1%E6%8B%9F/</guid>
      <description>1014 Waiting in Line # 0、题目 # Suppose a bank has N windows open for service.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1014waitinginline%E6%A8%A1%E6%8B%9F/featured.png" />
    </item>
    
    <item>
      <title>1015ReversiblePrimes质数</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1015reversibleprimes%E8%B4%A8%E6%95%B0/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1015reversibleprimes%E8%B4%A8%E6%95%B0/</guid>
      <description>1015 Reversible Primes # 0、题目 # A reversible prime in any number system is a prime whose “reverse” in that number system is also a prime.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1015reversibleprimes%E8%B4%A8%E6%95%B0/featured.png" />
    </item>
    
    <item>
      <title>1016PhoneBills模拟</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1016phonebills%E6%A8%A1%E6%8B%9F/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1016phonebills%E6%A8%A1%E6%8B%9F/</guid>
      <description>1016 Phone Bills # 0、题目 # A long-distance telephone company charges its customers by the following rules:</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1016phonebills%E6%A8%A1%E6%8B%9F/featured.png" />
    </item>
    
    <item>
      <title>1017QueueingatBank模拟</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1017queueingatbank%E6%A8%A1%E6%8B%9F/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1017queueingatbank%E6%A8%A1%E6%8B%9F/</guid>
      <description>1017 Queueing at Bank # 0、题目 # Suppose a bank has K windows open for service.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1017queueingatbank%E6%A8%A1%E6%8B%9F/featured.png" />
    </item>
    
    <item>
      <title>1018PublicBikeManagementDijkstraDFS</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1018publicbikemanagementdijkstradfs/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1018publicbikemanagementdijkstradfs/</guid>
      <description>1018 Public Bike Management # 0、题目 # There is a public bike service in Hangzhou City which provides great convenience to the tourists from all over the world.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1018publicbikemanagementdijkstradfs/featured.png" />
    </item>
    
    <item>
      <title>1019GeneralPalindromicNumber进制转化回文数</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1019generalpalindromicnumber%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%8C%96%E5%9B%9E%E6%96%87%E6%95%B0/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1019generalpalindromicnumber%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%8C%96%E5%9B%9E%E6%96%87%E6%95%B0/</guid>
      <description>1019 General Palindromic Number # 0、题目 # A number that will be the same when it is written forwards or backwards is known as a Palindromic Number.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1019generalpalindromicnumber%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%8C%96%E5%9B%9E%E6%96%87%E6%95%B0/featured.png" />
    </item>
    
    <item>
      <title>1020TreeTraversals二叉树DLRLDR求层次排列</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1020treetraversals%E4%BA%8C%E5%8F%89%E6%A0%91dlrldr%E6%B1%82%E5%B1%82%E6%AC%A1%E6%8E%92%E5%88%97/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1020treetraversals%E4%BA%8C%E5%8F%89%E6%A0%91dlrldr%E6%B1%82%E5%B1%82%E6%AC%A1%E6%8E%92%E5%88%97/</guid>
      <description>1020 Tree Traversals # 0、题目 # Suppose that all the keys in a binary tree are distinct positive integers.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1020treetraversals%E4%BA%8C%E5%8F%89%E6%A0%91dlrldr%E6%B1%82%E5%B1%82%E6%AC%A1%E6%8E%92%E5%88%97/featured.png" />
    </item>
    
    <item>
      <title>1021DeepestRootdfs图的联通子集个数树的深度</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1021deepestrootdfs%E5%9B%BE%E7%9A%84%E8%81%94%E9%80%9A%E5%AD%90%E9%9B%86%E4%B8%AA%E6%95%B0%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1021deepestrootdfs%E5%9B%BE%E7%9A%84%E8%81%94%E9%80%9A%E5%AD%90%E9%9B%86%E4%B8%AA%E6%95%B0%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6/</guid>
      <description>1021 Deepest Root # 0、题目 # graph which is connected and acyclic can be considered a tree.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1021deepestrootdfs%E5%9B%BE%E7%9A%84%E8%81%94%E9%80%9A%E5%AD%90%E9%9B%86%E4%B8%AA%E6%95%B0%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6/featured.png" />
    </item>
    
    <item>
      <title>1022DigitalLibrary搜索map和set</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1022digitallibrary%E6%90%9C%E7%B4%A2map%E5%92%8Cset/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1022digitallibrary%E6%90%9C%E7%B4%A2map%E5%92%8Cset/</guid>
      <description>1022 Digital Library # 0、题目 # A Digital Library contains millions of books, stored according to their titles, authors, key words of their abstracts, publishers, and published years.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1022digitallibrary%E6%90%9C%E7%B4%A2map%E5%92%8Cset/featured.png" />
    </item>
    
    <item>
      <title>1023HaveFunwithNumbers</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1023havefunwithnumbers/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1023havefunwithnumbers/</guid>
      <description>1023 Have Fun with Numbers # 0、题目 # Notice that the number 123456789 is a 9-digit number consisting exactly the numbers from 1 to 9, with no duplication.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1023havefunwithnumbers/featured.png" />
    </item>
    
    <item>
      <title>1024PalindromicNumber回文数</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1024palindromicnumber%E5%9B%9E%E6%96%87%E6%95%B0/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1024palindromicnumber%E5%9B%9E%E6%96%87%E6%95%B0/</guid>
      <description>1024 Palindromic Number # 0、题目 # A number that will be the same when it is written forwards or backwards is known as a Palindromic Number.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1024palindromicnumber%E5%9B%9E%E6%96%87%E6%95%B0/featured.png" />
    </item>
    
    <item>
      <title>1025PATRanking排序</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1025patranking%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1025patranking%E6%8E%92%E5%BA%8F/</guid>
      <description>1025 PAT Ranking # 0、题目 # Programming Ability Test (PAT) is organized by the College of Computer Science and Technology of Zhejiang University.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1025patranking%E6%8E%92%E5%BA%8F/featured.png" />
    </item>
    
    <item>
      <title>1027ColorsinMars</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1027colorsinmars/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1027colorsinmars/</guid>
      <description>1027 Colors in Mars # 0、题目 # People in Mars represent the colors in their computers in a similar way as the Earth people.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1027colorsinmars/featured.png" />
    </item>
    
    <item>
      <title>1028ListSorting</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1028listsorting/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1028listsorting/</guid>
      <description>1028 List Sorting # 0、题目 # Excel can sort records according to any column.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1028listsorting/featured.png" />
    </item>
    
    <item>
      <title>1029Median排序</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1029median%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1029median%E6%8E%92%E5%BA%8F/</guid>
      <description>1029 Median # 0、题目 # Given an increasing sequence S of N integers, the median is the number at the middle position.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1029median%E6%8E%92%E5%BA%8F/featured.png" />
    </item>
    
    <item>
      <title>1030TravelPlanDijkstaDFS</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1030travelplandijkstadfs/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1030travelplandijkstadfs/</guid>
      <description>1030 Travel Plan（Dijksta +DFS） # 0、题目 # A traveler’s map gives the distances between cities along the highways, together with the cost of each highway.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1030travelplandijkstadfs/featured.png" />
    </item>
    
    <item>
      <title>1031HelloWorldforU</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1031helloworldforu/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1031helloworldforu/</guid>
      <description>1031 Hello World for U # 0、题目 # Given any string of N (≥5) characters, you are asked to form the characters into the shape of U.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1031helloworldforu/featured.png" />
    </item>
    
    <item>
      <title>1032Sharing链表</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1032sharing%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1032sharing%E9%93%BE%E8%A1%A8/</guid>
      <description>1032 Sharing（链表） # 0、题目 # To store English words, one method is to use linked lists and store a word letter by letter.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1032sharing%E9%93%BE%E8%A1%A8/featured.png" />
    </item>
    
    <item>
      <title>1035Password</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1035password/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1035password/</guid>
      <description>1035 Password # 0、题目 # To prepare for PAT, the judge sometimes has to generate random passwords for the users.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1035password/featured.png" />
    </item>
    
    <item>
      <title>1036BoysvsGirls排序</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1036boysvsgirls%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1036boysvsgirls%E6%8E%92%E5%BA%8F/</guid>
      <description>1036 Boys vs Girls（排序） # 0、题目 # This time you are asked to tell the difference between the lowest grade of all the male students and the highest grade of all the female students.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1036boysvsgirls%E6%8E%92%E5%BA%8F/featured.png" />
    </item>
    
    <item>
      <title>1037MagicCoupon贪心排序</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1037magiccoupon%E8%B4%AA%E5%BF%83%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1037magiccoupon%E8%B4%AA%E5%BF%83%E6%8E%92%E5%BA%8F/</guid>
      <description>1037 Magic Coupon（贪心，排序） # 0、题目 # The magic shop in Mars is offering some magic coupons.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1037magiccoupon%E8%B4%AA%E5%BF%83%E6%8E%92%E5%BA%8F/featured.png" />
    </item>
    
    <item>
      <title>1038RecovertheSmallestNumber贪心排序</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1038recoverthesmallestnumber%E8%B4%AA%E5%BF%83%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1038recoverthesmallestnumber%E8%B4%AA%E5%BF%83%E6%8E%92%E5%BA%8F/</guid>
      <description>1038 Recover the Smallest Number（贪心） # 0、题目 # Given a collection of number segments, you are supposed to recover the smallest number from them.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1038recoverthesmallestnumber%E8%B4%AA%E5%BF%83%E6%8E%92%E5%BA%8F/featured.png" />
    </item>
    
    <item>
      <title>1039CourseListforStudent</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1039courselistforstudent/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1039courselistforstudent/</guid>
      <description>1039 Course List for Student # 0、题目 # Zhejiang University has 40000 students and provides 2500 courses.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1039courselistforstudent/featured.png" />
    </item>
    
    <item>
      <title>1040LongestSymmetricString动态规划</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1040longestsymmetricstring%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1040longestsymmetricstring%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid>
      <description>1040 Longest Symmetric String # 0、题目 # Given a string, you are supposed to output the length of the longest symmetric sub-string.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1040longestsymmetricstring%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/featured.png" />
    </item>
    
    <item>
      <title>1041BeUnique</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1041beunique/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1041beunique/</guid>
      <description>1041 Be Unique # 0、题目 # Being unique is so important to people on Mars that even their lottery is designed in a unique way.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1041beunique/featured.png" />
    </item>
    
    <item>
      <title>1042ShufflingMachine模拟</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1042shufflingmachine%E6%A8%A1%E6%8B%9F/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1042shufflingmachine%E6%A8%A1%E6%8B%9F/</guid>
      <description>1042 Shuffling Machine（模拟） # 0、题目 # Shuffling is a procedure used to randomize a deck of playing cards.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1042shufflingmachine%E6%A8%A1%E6%8B%9F/featured.png" />
    </item>
    
    <item>
      <title>1043IsItaBinarySearchTree二叉查找树BST</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1043isitabinarysearchtree%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91bst/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1043isitabinarysearchtree%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91bst/</guid>
      <description>1043 Is It a Binary Search Tree # 0、题目 # A Binary Search Tree (BST) is recursively defined as a binary tree which has the following properties:</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1043isitabinarysearchtree%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91bst/featured.png" />
    </item>
    
    <item>
      <title>1044ShoppinginMars二分</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1044shoppinginmars%E4%BA%8C%E5%88%86/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1044shoppinginmars%E4%BA%8C%E5%88%86/</guid>
      <description>1044 Shopping in Mars # 0、题目 # Shopping in Mars is quite a different experience.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1044shoppinginmars%E4%BA%8C%E5%88%86/featured.png" />
    </item>
    
    <item>
      <title>1045FavoriteColorStripe动态规划</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1045favoritecolorstripe%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1045favoritecolorstripe%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid>
      <description>1045 Favorite Color Stripe（动态规划） # 0、题目 # Eva is trying to make her own color stripe out of a given one.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1045favoritecolorstripe%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/featured.png" />
    </item>
    
    <item>
      <title>1046ShortestDistance前缀和</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1046shortestdistance%E5%89%8D%E7%BC%80%E5%92%8C/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1046shortestdistance%E5%89%8D%E7%BC%80%E5%92%8C/</guid>
      <description>1046 Shortest Distance（前缀和） # 0、题目 # The task is really simple: given N exits on a highway which forms a simple cycle, you are supposed to tell the shortest distance between any pair of exits.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/1046shortestdistance%E5%89%8D%E7%BC%80%E5%92%8C/featured.png" />
    </item>
    
    <item>
      <title>PAT甲级题目分布</title>
      <link>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/pat%E7%94%B2%E7%BA%A7%E9%A2%98%E7%9B%AE%E5%88%86%E5%B8%83/</link>
      <pubDate>Fri, 01 Sep 2023 18:00:36 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/pat%E7%94%B2%E7%BA%A7%E9%A2%98%E7%9B%AE%E5%88%86%E5%B8%83/</guid>
      <description>PAT 甲级题目分布 # 最短路径： # 1003、1018、1030、1072、1087、1111</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/pat%E7%94%B2%E7%BA%A7/pat%E7%94%B2%E7%BA%A7%E9%A2%98%E7%9B%AE%E5%88%86%E5%B8%83/featured.png" />
    </item>
    
  </channel>
</rss>
