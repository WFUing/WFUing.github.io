<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redis on WFUing&#39;s Blog</title>
    <link>https://WFUing.github.io/tags/redis/</link>
    <description>Recent content in Redis on WFUing&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© 2024 WFUing</copyright>
    <lastBuildDate>Fri, 01 Mar 2024 15:15:08 +0800</lastBuildDate><atom:link href="https://WFUing.github.io/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从零实现redis(6)- 慢日志监控</title>
      <link>https://WFUing.github.io/posts/architecture/backend/database/redis/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis6--%E6%85%A2%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7/</link>
      <pubDate>Fri, 01 Mar 2024 15:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/backend/database/redis/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis6--%E6%85%A2%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7/</guid>
      <description>实现类似 guava-cache 中的 removeListener 删除监听器</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/backend/database/redis/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis6--%E6%85%A2%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7/featured.png" />
    </item>
    
    <item>
      <title>从零实现redis(5)- 持久化</title>
      <link>https://WFUing.github.io/posts/architecture/backend/database/redis/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis5--%E6%8C%81%E4%B9%85%E5%8C%96/</link>
      <pubDate>Thu, 29 Feb 2024 15:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/backend/database/redis/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis5--%E6%8C%81%E4%B9%85%E5%8C%96/</guid>
      <description>实现类似 guava-cache 中的 removeListener 删除监听器</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/backend/database/redis/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis5--%E6%8C%81%E4%B9%85%E5%8C%96/featured.png" />
    </item>
    
    <item>
      <title>从零实现redis(4)- 监听器（Listerner） </title>
      <link>https://WFUing.github.io/posts/architecture/backend/database/redis/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis4--%E7%9B%91%E5%90%AC%E5%99%A8listerner-/</link>
      <pubDate>Thu, 29 Feb 2024 13:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/backend/database/redis/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis4--%E7%9B%91%E5%90%AC%E5%99%A8listerner-/</guid>
      <description>实现类似 guava-cache 中的 removeListener 删除监听器</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/backend/database/redis/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis4--%E7%9B%91%E5%90%AC%E5%99%A8listerner-/featured.png" />
    </item>
    
    <item>
      <title>从零实现redis(3)- 拦截器（Interceptor）</title>
      <link>https://WFUing.github.io/posts/architecture/backend/database/redis/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis3--%E6%8B%A6%E6%88%AA%E5%99%A8interceptor/</link>
      <pubDate>Thu, 29 Feb 2024 12:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/backend/database/redis/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis3--%E6%8B%A6%E6%88%AA%E5%99%A8interceptor/</guid>
      <description>Interceptor（拦截器）是用于实现AOP（面向切面编程）的工具之一，常用于对系统中的某些操作进行拦截并在其之前或之后加入某些处理，例如性能监控、日志记录、安全检查、事务处理、权限检查等。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/backend/database/redis/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis3--%E6%8B%A6%E6%88%AA%E5%99%A8interceptor/featured.png" />
    </item>
    
    <item>
      <title>从零实现redis(2)- expire 过期原理</title>
      <link>https://WFUing.github.io/posts/architecture/backend/database/redis/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis2--expire-%E8%BF%87%E6%9C%9F%E5%8E%9F%E7%90%86/</link>
      <pubDate>Wed, 28 Feb 2024 12:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/backend/database/redis/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis2--expire-%E8%BF%87%E6%9C%9F%E5%8E%9F%E7%90%86/</guid>
      <description>Redis 是可以对 key 设置过期时间的，因此需要有相应的机制将已过期的键值对删除，而做这个工作的就是过期键值删除策略。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/backend/database/redis/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis2--expire-%E8%BF%87%E6%9C%9F%E5%8E%9F%E7%90%86/featured.png" />
    </item>
    
    <item>
      <title>从零实现redis(1)-实现固定缓存大小</title>
      <link>https://WFUing.github.io/posts/architecture/backend/database/redis/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis1-%E5%AE%9E%E7%8E%B0%E5%9B%BA%E5%AE%9A%E7%BC%93%E5%AD%98%E5%A4%A7%E5%B0%8F/</link>
      <pubDate>Wed, 28 Feb 2024 11:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/backend/database/redis/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis1-%E5%AE%9E%E7%8E%B0%E5%9B%BA%E5%AE%9A%E7%BC%93%E5%AD%98%E5%A4%A7%E5%B0%8F/</guid>
      <description>redis 的驱除策略，也称为内存淘汰策略。当 Redis 的运行内存已经超过 Redis 设置的最大内存之后，则会使用内存淘汰策略删除符合条件的 key，以此来保障 Redis 高效的运行。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/backend/database/redis/redis-cache/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0redis1-%E5%AE%9E%E7%8E%B0%E5%9B%BA%E5%AE%9A%E7%BC%93%E5%AD%98%E5%A4%A7%E5%B0%8F/featured.png" />
    </item>
    
  </channel>
</rss>
