<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Domain Specific Language on Waiting For You</title>
    <link>https://WFUing.github.io/post/tech/language/dsl/</link>
    <description>Recent content in Domain Specific Language on Waiting For You</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 17 Dec 2023 22:23:15 +0800</lastBuildDate><atom:link href="https://WFUing.github.io/post/tech/language/dsl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>cuelang 简介</title>
      <link>https://WFUing.github.io/post/tech/language/dsl/cuelang/</link>
      <pubDate>Sun, 17 Dec 2023 22:23:15 +0800</pubDate>
      
      <guid>https://WFUing.github.io/post/tech/language/dsl/cuelang/</guid>
      <description>CUE 是一种开源数据验证语言和推理引擎，源于逻辑编程。虽然该语言不是通用编程语言，但它有许多应用，如数据验证、数据模板、配置、查询、代码生成甚至脚本编写。推理引擎可用于验证代码中的数据，或将其作为代码生成管道的一部分。</description>
    </item>
    
    <item>
      <title>iot 相关 dsl</title>
      <link>https://WFUing.github.io/post/tech/language/dsl/iot-dsl/</link>
      <pubDate>Thu, 16 Nov 2023 21:46:20 +0800</pubDate>
      
      <guid>https://WFUing.github.io/post/tech/language/dsl/iot-dsl/</guid>
      <description>vorto 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 InformationModel: &amp;#39;vortolang&amp;#39; 1.0 &amp;#39;namespace&amp;#39; qualifiedName &amp;#39;version&amp;#39; version (&amp;#39;displayname&amp;#39; string)? (&amp;#39;description&amp;#39; string)? (&amp;#39;category&amp;#39; ID(&amp;#39;/&amp;#39; ID)*)? (modelReference)* &amp;#39;infomodel&amp;#39; ID &amp;#39;{&amp;#39; &amp;#39;functionblocks&amp;#39; &amp;#39;{&amp;#39; (functionblockProperty)* &amp;#39;}&amp;#39; ; functionblockProperty: (&amp;#39;mandatory&amp;#39; | &amp;#39;optional&amp;#39;)? (&amp;#39;multiple&amp;#39;)? ID &amp;#39;as&amp;#39; [FunctionBlock::ID | qualifiedName] (description)? qualifiedName: ID (&amp;#39;.&amp;#39; ID)*; version : int(&amp;#39;.</description>
    </item>
    
    <item>
      <title>langium简介</title>
      <link>https://WFUing.github.io/post/tech/language/dsl/langium/</link>
      <pubDate>Tue, 31 Oct 2023 10:46:20 +0800</pubDate>
      
      <guid>https://WFUing.github.io/post/tech/language/dsl/langium/</guid>
      <description>Usage 1 Langium download https://www.npmjs.com/package/langium demo: https://langium.org/docs/getting-started/ note1：第一次按以上流程创建 DSL，HELLO-WORLD 项目在/Users/{用户名}/目录下 note2: VScode 下安装 code 指令。 Shift+Command+P调起命令窗口，输入shell Command，下方出现 Install &#39;code&#39; command in PATH 选项，点击以安装 vscode extension: langium 2 Langium Concepts 1. The Grammar Language
document: https://langium.org/docs/grammar-language/ Language Declaration: Langium 语法文件以声明语言名称的标题开头 Terminal Rules: Langium 解析器内置流基于Javascript Regular Expressions的 lexer，也允许使用EBNF表达式。但是建议使用 javascript 正则表达式，因为在 langium 内部将 EBNF 转换成了正则表达式 Parser Rules: Parser Rules 向 parser 指示哪些令牌序列是有效的 The Entry Rule: 解析步骤起点的 Parser Rules，从关键字 entry 开始，并匹配其他 Parser Rules 2. 目录结构</description>
    </item>
    
    <item>
      <title>vscode-language-server</title>
      <link>https://WFUing.github.io/post/tech/language/dsl/vscode-language-server/</link>
      <pubDate>Tue, 31 Oct 2023 10:46:20 +0800</pubDate>
      
      <guid>https://WFUing.github.io/post/tech/language/dsl/vscode-language-server/</guid>
      <description>Resource Protocol specification https://microsoft.github.io/language-server-protocol/ Syntax highlight guide https://code.visualstudio.com/api/language-extensions/syntax-highlight-guide Language Server Tools https://langserver.org/ Language Server Protocol https://microsoft.github.io/language-server-protocol/ VSCode Syntax Highlight Guide https://code.visualstudio.com/api/language-extensions/syntax-highlight-guide Scope Lists https://macromates.com/manual/en/language_grammars https://www.apeth.com/nonblog/stories/textmatebundle.html </description>
    </item>
    
    <item>
      <title>xtext简介</title>
      <link>https://WFUing.github.io/post/tech/language/dsl/xtext/</link>
      <pubDate>Tue, 31 Oct 2023 10:46:20 +0800</pubDate>
      
      <guid>https://WFUing.github.io/post/tech/language/dsl/xtext/</guid>
      <description>Usage 项目创建 XText 开发一个新的语言
定义 xtext 文件 dsl.xtext 包括语法定义，语义（Cross-Reference）定义 生成模型代码 XText 根据 dsl.xtext 在 src-gen 目录下，生成 AST 节点模型类 parser，semantic analysis 等阶段需要的 类，如 GrammarAccess，Scope 等 定义 GenerateDsl.mwe2 定义生成流程 generateXtendStub = false 禁用 xtend 模板文件生成 编写 Language Implementation 编写 IDE Features 项目初始化
使用 Eclipse 开发 Xtext 应用能够得到最大化的支持，包括 xtext，xtext 语言支持，Editor 支持，自动生成 Artifact 等 由于 Eclipse 一些使用上的原因，建议将 Xtext 当做一个纯 Java 框架进行使用，通过 Gradle 自动根据 xtext 生成源代码，这样能够使用 IDEA 进行开发。 目录结构
xxx.dsl 定义 DSL 的核心处理类，包括 Format，Scope，Validation，Code Generation xxx.</description>
    </item>
    
  </channel>
</rss>
