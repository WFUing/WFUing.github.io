<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>李宏毅机器学习&amp;深度学习笔记 on WFUing&#39;s Blog</title>
    <link>https://WFUing.github.io/posts/ai/li-hongyis-notes/</link>
    <description>Recent content in 李宏毅机器学习&amp;深度学习笔记 on WFUing&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© 2024 WFUing</copyright>
    <lastBuildDate>Mon, 23 Oct 2023 16:25:26 +0800</lastBuildDate><atom:link href="https://WFUing.github.io/posts/ai/li-hongyis-notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一、机器学习概论</title>
      <link>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%B8%80%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%AE%BA/</link>
      <pubDate>Mon, 23 Oct 2023 16:25:26 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%B8%80%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%AE%BA/</guid>
      <description>机器学习是什么 # 机器学习就是让机器能自动找到一个函数function</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%B8%80%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%AE%BA/featured.png" />
    </item>
    
    <item>
      <title>七、Convolutional Neural Network</title>
      <link>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%B8%83convolutional-neural-network/</link>
      <pubDate>Mon, 23 Oct 2023 16:25:26 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%B8%83convolutional-neural-network/</guid>
      <description>7.1 CNN入门详解 # 卷积神经网络（CNN）常常被用来做图像处理，当然也可以用一般的神经网络，那它们各自有什么优缺点呢？</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%B8%83convolutional-neural-network/featured.png" />
    </item>
    
    <item>
      <title>三、梯度下降</title>
      <link>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%B8%89%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D/</link>
      <pubDate>Mon, 23 Oct 2023 16:25:26 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%B8%89%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D/</guid>
      <description>梯度下降伪代码 # 梯度下降可以优化损失函数的值，使其尽量小，即可找到最好（在数据集上拟合效果最好）的模型参数。现在假设模型 $f$ 中只有一个参数 $w$ ，则损失函数为 $L(f) = L(w)$ ，梯度下降算法如下（若模型有多个参数，按相同方法更新各方法）</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%B8%89%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D/featured.png" />
    </item>
    
    <item>
      <title>二、回归模型</title>
      <link>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%BA%8C%E5%9B%9E%E5%BD%92%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Mon, 23 Oct 2023 16:25:26 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%BA%8C%E5%9B%9E%E5%BD%92%E6%A8%A1%E5%9E%8B/</guid>
      <description>2.1 线性回归模型 # 回归模型应用案例 # 股票市场预测（Stock Market Forecast）：预测某个公司明天的股票情况 自动驾驶车（Self-Driving Car）：预测方向盘的转动角度 推荐系统（Recommendation）：预测某用户购买某商品的可能性 线性回归模型（Linear Regression Model） # 形式如下： $y= f(x) = w \cdot x + b $</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%BA%8C%E5%9B%9E%E5%BD%92%E6%A8%A1%E5%9E%8B/featured.png" />
    </item>
    
    <item>
      <title>五、深度学习</title>
      <link>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%BA%94%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Mon, 23 Oct 2023 16:25:26 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E4%BA%94%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</guid>
      <description>5.1引言 # 深度学习的历史 # 1958年：心理学家Rosenblatt提出感知机（Perceptron） 它是一个线性模型。 1969年：有人说感知机是线性模型，具有局限性。 1980年代：多层感知机（Multi-layer Perceptron） 和当今的神经网络是没有本质差别的。 1986年：Hinton提出反向传播算法（Backpropagation） 但是超过3个隐藏层的神经网络，还是训练不出好的结果。 1989年：有人提出一个隐藏层就可以得到任何函数，为什么要多层？ 多层感知机慢慢淡出大家的视野。 2006年：受限玻尔兹曼机初始化（RBM Initialization） Hinton提出用受限玻尔兹曼机做初始化，很多人觉得这是个大突破，但实际上用处并不大。 至少让多层感知机回到大家的视野。 2009年：GPU 2011年：神经网络用于语音识别 2012年：神经网络技术赢得ILSVRC（ImageNet Large Scale Visual Recognition Challenge） 深度学习的三个步骤 # 和机器学习一样：</description>
      
    </item>
    
    <item>
      <title>六、Tips for Training DNN</title>
      <link>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E5%85%ADtips-for-training-dnn/</link>
      <pubDate>Mon, 23 Oct 2023 16:25:26 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E5%85%ADtips-for-training-dnn/</guid>
      <description>6.1 神经网络训练问题与解决方案 # 明确问题类型及其对应方法 # 在深度学习中，一般有两种问题：</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/li-hongyis-notes/%E5%85%ADtips-for-training-dnn/featured.png" />
    </item>
    
    <item>
      <title>四、分类模型</title>
      <link>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E5%9B%9B%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Mon, 23 Oct 2023 16:25:26 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/ai/li-hongyis-notes/%E5%9B%9B%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9E%8B/</guid>
      <description>4.1 分类简介及其与回归的区别 # 分类模型应用案例（Classification Cases） # 信用评分（Credit Scoring） 输入：收入、储蓄、职业、年龄、信用历史等等 输出：是否贷款 医疗诊断（Medical Diagnosis） 输入：现在症状、年龄、性别、病史 输出：哪种疾病 手写文字识别（Handwritten Character Recognition） 输入：文字图片 输出：是哪一个汉字 人脸识别（Face Recognition） 输入：面部图片 输出：是哪个人 把分类当成回归去做 # 不行</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/ai/li-hongyis-notes/%E5%9B%9B%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9E%8B/featured.png" />
    </item>
    
  </channel>
</rss>
