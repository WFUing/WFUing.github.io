<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>动态规划 on WFUing&#39;s Blog</title>
    <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
    <description>Recent content in 动态规划 on WFUing&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© 2024 WFUing</copyright>
    <lastBuildDate>Fri, 01 Mar 2024 18:16:02 +0800</lastBuildDate><atom:link href="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【LeetCode 446】等差数列划分 II - 子序列</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-446%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%88%92%E5%88%86-ii---%E5%AD%90%E5%BA%8F%E5%88%97/</link>
      <pubDate>Fri, 01 Mar 2024 18:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-446%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%88%92%E5%88%86-ii---%E5%AD%90%E5%BA%8F%E5%88%97/</guid>
      <description>【LeetCode 446】等差数列划分 II - 子序列题解。我们用一个二重循环去遍历 &lt;code&gt;nums&lt;/code&gt; 中的所有元素对 &lt;code&gt;(nums[i], nums[j])&lt;/code&gt;，其中 &lt;code&gt;j&amp;lt;i&lt;/code&gt;。将 &lt;code&gt;nums[i]&lt;/code&gt; 和 &lt;code&gt;nums[j]&lt;/code&gt; 分别当作等差数列的尾项和倒数第二项，则该等差数列的公差 &lt;code&gt;d=nums[i]-nums[j]&lt;/code&gt;。由于公差相同，我们可以将 &lt;code&gt;nums[i]&lt;/code&gt; 加到以 &lt;code&gt;nums[j]&lt;/code&gt; 为尾项，公差为 &lt;code&gt;d&lt;/code&gt; 的弱等差子序列的末尾，这对应着状态转移 &lt;code&gt;dp[i][d]+=dp[j][d]&lt;/code&gt;。同时，&lt;code&gt;(nums[i], nums[j])&lt;/code&gt; 这一对元素也可以当作一个弱等差子序列，故有状态转移&lt;code&gt;dp[i][d]+=dp[j][d]+1&lt;/code&gt;</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-446%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%88%92%E5%88%86-ii---%E5%AD%90%E5%BA%8F%E5%88%97/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 368】最大整除子集</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-368%E6%9C%80%E5%A4%A7%E6%95%B4%E9%99%A4%E5%AD%90%E9%9B%86/</link>
      <pubDate>Fri, 01 Mar 2024 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-368%E6%9C%80%E5%A4%A7%E6%95%B4%E9%99%A4%E5%AD%90%E9%9B%86/</guid>
      <description>【LeetCode 368】最大整除子集题解。难点在于如何记录答案，最后把最大整除子集输出。幸运的是，题目没有限制输出的字典序，只要输出的是合理答案就可以。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-368%E6%9C%80%E5%A4%A7%E6%95%B4%E9%99%A4%E5%AD%90%E9%9B%86/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 354】俄罗斯套娃信封问题</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-354%E4%BF%84%E7%BD%97%E6%96%AF%E5%A5%97%E5%A8%83%E4%BF%A1%E5%B0%81%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 29 Feb 2024 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-354%E4%BF%84%E7%BD%97%E6%96%AF%E5%A5%97%E5%A8%83%E4%BF%A1%E5%B0%81%E9%97%AE%E9%A2%98/</guid>
      <description>【LeetCode 354】俄罗斯套娃信封问题题解。第一个难点在于如何同时控制 $w_i$ 和 $h_i$ 两个维度，很自然地想到先把一个维度排序，然后只需要考虑另一个维度&lt;strong&gt;最长递增子序列&lt;/strong&gt;就行了。这时候就有第二个难点了，如果在 $w_i$ 这个维度，存在两个值相同的情况怎么处理，需要将 $w_i$ 相同的 $h_i$ 从高到低排序，这样相同 $w_i$ 的部分就不会相互影响。但是还是会TLE，具体如何请看题解。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-354%E4%BF%84%E7%BD%97%E6%96%AF%E5%A5%97%E5%A8%83%E4%BF%A1%E5%B0%81%E9%97%AE%E9%A2%98/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 312】戳气球</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-312%E6%88%B3%E6%B0%94%E7%90%83/</link>
      <pubDate>Wed, 28 Feb 2024 18:31:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-312%E6%88%B3%E6%B0%94%E7%90%83/</guid>
      <description>【LeetCode 312】戳气球题解。本题的难点在于如何控制气球的相邻信息，每一次戳气球都会产生新的相邻的气球，但是很容易有一种做题的直觉，先判断一个气球，然后继续判断其左边和右边。怎么判断呢？可以倒过来看这些操作，将全过程看作是每次添加一个气球。我们定义方法 &lt;code&gt;solve&lt;/code&gt; ，令 &lt;code&gt;solve(i, j)&lt;/code&gt; 表示将开区间 &lt;code&gt;(i, j)&lt;/code&gt; 内的位置全部填满气球能够得到的最多硬币数。由于是开区间，因此区间两端的气球的编号就是 &lt;code&gt;i&lt;/code&gt; 和 &lt;code&gt;j&lt;/code&gt;，对应着 &lt;code&gt;val[i]&lt;/code&gt; 和 &lt;code&gt;val[j]&lt;/code&gt;。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-312%E6%88%B3%E6%B0%94%E7%90%83/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 337】打家劫舍III</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-337%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8Diii/</link>
      <pubDate>Wed, 28 Feb 2024 18:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-337%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8Diii/</guid>
      <description>【LeetCode 337】打家劫舍III题解。很自然地想到是树状dp，分成两种情况，一种包含当前节点，另一种不包含。难点在于不包含的情况，不仅仅有左右孩子包含的情况，还有不包含的情况。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-337%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8Diii/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 188】买卖股票的最佳时机IV</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-188%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAiv/</link>
      <pubDate>Wed, 28 Feb 2024 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-188%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAiv/</guid>
      <description>【LeetCode 188】买卖股票的最佳时机IV题解。本题的难点有三个方面：1️⃣关于 $in$ 和 $out$ 数组中 $j$ 的关系，在这里，&lt;code&gt;买入卖出&lt;/code&gt;这一整套流程才算一次交易。那么，在卖出的那一刻，1次交易就完成了。那第一次买入，其实是第 0 次交易，第一次卖出，是第 1 次交易结束。2️⃣如何初始化，首先第一天只能买进，不能卖出，而且最多只能有一次交易，那么 $in[0][1&amp;hellip;k]$ 和 $out[0][1&amp;hellip;k]$ 如何初始化。3️⃣如何更新 $in$ 和 $out$ 数组。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-188%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAiv/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 174】地下城游戏</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-174%E5%9C%B0%E4%B8%8B%E5%9F%8E%E6%B8%B8%E6%88%8F/</link>
      <pubDate>Mon, 26 Feb 2024 20:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-174%E5%9C%B0%E4%B8%8B%E5%9F%8E%E6%B8%B8%E6%88%8F/</guid>
      <description>【LeetCode 174】地下城游戏题解。本题的难点在于怎么处理血量增加的问题, 增加血量不能为之前的损失提供帮助，只会对后续有帮助。这意味着从王子救公主的思路想dp是困难的，但是公主救王子的思路dp很好做，从后往前推，当前如果可以治愈，那么当前的最小初始血量就是已经扣除的血量减去治疗量，注意不可以&amp;lt;1。 这意味着过量治疗。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-174%E5%9C%B0%E4%B8%8B%E5%9F%8E%E6%B8%B8%E6%88%8F/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 124】二叉树中的最大路径和</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-124%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%AF%E5%BE%84%E5%92%8C/</link>
      <pubDate>Mon, 26 Feb 2024 19:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-124%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%AF%E5%BE%84%E5%92%8C/</guid>
      <description>【LeetCode 124】二叉树中的最大路径和题解。这题是树状dp的典型，如何在遍历树的过程中记录一些信息，是比较难的一个点。此外，这题有两个要记录的内容，一个是树（包括子树）的 根节点 或者 根节点和一个左/右节点 中的最大值，这个要一路记录上去，用 dp 记录。还有一个就是 根节点、左节点和右节点 与之前 dp 中的最大值，这个是最后的答案，用 ans 记录。我在解题的时候，总会忘记把 ans 跟自己做比较，也是以后需要注意的一个点。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-124%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%AF%E5%BE%84%E5%92%8C/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 115】不同的子序列</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-115%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97/</link>
      <pubDate>Mon, 26 Feb 2024 18:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-115%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97/</guid>
      <description>【LeetCode 115】不同的子序列题解。在我二刷这道题的时候，卡着没做出来，画了 $dp[][]$ 数组，但是没有&lt;strong&gt;初始化&lt;/strong&gt;，所以一直出错，直到看了题解。但是官方题解是从后往前遍历，我觉得并没有这个必要。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-115%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97/featured.png" />
    </item>
    
    <item>
      <title>【LeetCode 72】编辑距离</title>
      <link>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-72%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/</link>
      <pubDate>Mon, 26 Feb 2024 17:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-72%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/</guid>
      <description>【LeetCode 72】编辑距离题解。在我二刷这道题的时候，还是卡了一会，主要有三个难点：1️⃣dp数组表示什么2️⃣如何初始化dp数组3️⃣如何针对题目告诉我们的三种操作，实现dp数组的更新。当然这也是动态规划数组的三个难点，需要重点培养这种感觉，形成正确的判断直觉。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/reviews/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/leetcode-72%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/featured.png" />
    </item>
    
  </channel>
</rss>
