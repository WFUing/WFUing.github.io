<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>虚拟化技术 on WFUing&#39;s Blog</title>
    <link>https://WFUing.github.io/posts/architecture/virtualization/</link>
    <description>Recent content in 虚拟化技术 on WFUing&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© 2024 WFUing</copyright>
    <lastBuildDate>Wed, 08 May 2024 08:11:01 +0800</lastBuildDate><atom:link href="https://WFUing.github.io/posts/architecture/virtualization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>actor-platform 智能部署</title>
      <link>https://WFUing.github.io/posts/architecture/virtualization/ap-vm/</link>
      <pubDate>Wed, 08 May 2024 08:11:01 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/virtualization/ap-vm/</guid>
      <description>actor-platform 智能部署</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/virtualization/ap-vm/featured.png" />
    </item>
    
    <item>
      <title>Open vSwitch</title>
      <link>https://WFUing.github.io/posts/architecture/virtualization/ovs/</link>
      <pubDate>Tue, 30 Apr 2024 08:11:01 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/virtualization/ovs/</guid>
      <description>Open vSwitch</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/virtualization/ovs/featured.png" />
    </item>
    
    <item>
      <title>在 Libvirt 和 KVM 上使用 Terraform 进行自动配置</title>
      <link>https://WFUing.github.io/posts/architecture/virtualization/terraform-libvirt-kvm/</link>
      <pubDate>Mon, 29 Apr 2024 12:11:01 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/virtualization/terraform-libvirt-kvm/</guid>
      <description>无论是公共云还是本地环境，当今的企业基础设施比以往任何时候都需要更多的自动化。幸运的是，Terraform 和 Ansible 等基础设施即代码 (IaC) 工具为这两者提供了解决方案。本文提供了一个场景，其中存在基于 KVM 的本地虚拟环境并利用 Terraform 进行自动配置。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/virtualization/terraform-libvirt-kvm/featured.png" />
    </item>
    
    <item>
      <title>Virtualization</title>
      <link>https://WFUing.github.io/posts/architecture/virtualization/overview/</link>
      <pubDate>Fri, 26 Apr 2024 18:11:01 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/virtualization/overview/</guid>
      <description>虚拟化是一个描述运行软件的广义计算机术语，通常体现为在单一系统上运行多个操作系统，这些操作系统同时运行，而每个操作系统又是相互独立的。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/virtualization/overview/featured.png" />
    </item>
    
    <item>
      <title>QEMU</title>
      <link>https://WFUing.github.io/posts/architecture/virtualization/qemu/</link>
      <pubDate>Fri, 26 Apr 2024 14:11:01 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/virtualization/qemu/</guid>
      <description>QEMU（快速模拟器）是一个免费的开源机器模拟器和虚拟器，可以在单个主机系统上运行各种客户操作系统和体系结构。与传统的虚拟化解决方案不同，QEMU 不仅仅是一个虚拟机管理程序；它是一个模拟器，可以在各种主机平台上运行客户操作系统。它是用于软件开发、测试和部署的强大工具。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/virtualization/qemu/featured.png" />
    </item>
    
  </channel>
</rss>
