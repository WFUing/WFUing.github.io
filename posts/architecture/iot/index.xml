<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Internet of Things on WFUing&#39;s Blog</title>
    <link>https://WFUing.github.io/posts/architecture/iot/</link>
    <description>Recent content in Internet of Things on WFUing&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© 2024 WFUing</copyright>
    <lastBuildDate>Sun, 07 Apr 2024 10:16:02 +0800</lastBuildDate><atom:link href="https://WFUing.github.io/posts/architecture/iot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>vorto tango</title>
      <link>https://WFUing.github.io/posts/architecture/iot/vorto-tango/</link>
      <pubDate>Sun, 07 Apr 2024 10:16:02 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iot/vorto-tango/</guid>
      <description>用vorto刻画tango</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iot/vorto-tango/featured.png" />
    </item>
    
    <item>
      <title>快速入门 Akka Java 指南</title>
      <link>https://WFUing.github.io/posts/architecture/iot/akka-java/</link>
      <pubDate>Mon, 30 Oct 2023 09:16:13 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iot/akka-java/</guid>
      <description>Akka 是一个用于在 JVM 上构建高并发、分布式和可容错的事件驱动应用程序的运行时工具包。Akka 既可以用于 Java，也可以用于 Scala。本指南通过描述 Java 版本的&lt;code&gt;Hello World&lt;/code&gt;示例来介绍 Akka。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iot/akka-java/featured.png" />
    </item>
    
    <item>
      <title>术语与概念</title>
      <link>https://WFUing.github.io/posts/architecture/iot/concept/</link>
      <pubDate>Sat, 28 Oct 2023 22:05:13 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iot/concept/</guid>
      <description>试图建立一个通用的术语来定义一个坚实的基础以对并发、分布式系统这些 Akka 的目标问题展开交流。请注意，对于这些术语并没有一个统一的定义。我们只是为了寻找一些可行的定义以便在整个文档中进行引用。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iot/concept/featured.png" />
    </item>
    
    <item>
      <title>响应式宣言(Reactive Manifesto)</title>
      <link>https://WFUing.github.io/posts/architecture/iot/reactive-manifesto/</link>
      <pubDate>Sat, 28 Oct 2023 21:16:13 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iot/reactive-manifesto/</guid>
      <description>响应式系统具有响应性、复原性、弹性和消息驱动性。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iot/reactive-manifesto/featured.png" />
    </item>
    
    <item>
      <title>akka框架</title>
      <link>https://WFUing.github.io/posts/architecture/iot/akka/</link>
      <pubDate>Fri, 27 Oct 2023 09:16:13 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iot/akka/</guid>
      <description>Akka 是一个开源项目，基于 Apache 2 License。AKKA框架是用Scala写的，主要用于高并发与分布式应用，目前已经得到广泛地运用，例如Spark、Spray等框架在底层都使用了AKKA进行并发处理。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iot/akka/featured.png" />
    </item>
    
    <item>
      <title>State Machine</title>
      <link>https://WFUing.github.io/posts/architecture/iot/state-machine/</link>
      <pubDate>Mon, 16 Oct 2023 11:16:13 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iot/state-machine/</guid>
      <description>有限状态机 (finite-state machine, FSM) 是一种抽象机器，在任何给定时间内都可以处于有限个状态中的一个状态。FSM 可以根据某些外部输入从一种状态转换到另一种状态，从一种状态转换到另一种状态称为转换。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iot/state-machine/featured.png" />
    </item>
    
    <item>
      <title>Actor Model</title>
      <link>https://WFUing.github.io/posts/architecture/iot/actor-model/</link>
      <pubDate>Fri, 13 Oct 2023 09:16:13 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/iot/actor-model/</guid>
      <description>CPU 上有多个内核。如果我们想充分利用现有的这些硬件，就需要一种并发运行代码的方法。数十年来无法追踪的错误和开发人员的沮丧都表明，线程并不是解决问题的办法。不过不用担心，我们还有其他很好的选择，今天我要向你展示的就是其中之一：actor model。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/iot/actor-model/featured.png" />
    </item>
    
  </channel>
</rss>
