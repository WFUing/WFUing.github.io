<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>后端开发 on WFUing&#39;s Blog</title>
    <link>https://WFUing.github.io/posts/architecture/backend/</link>
    <description>Recent content in 后端开发 on WFUing&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© 2024 WFUing</copyright>
    <lastBuildDate>Sun, 11 Aug 2024 09:46:05 +0800</lastBuildDate><atom:link href="https://WFUing.github.io/posts/architecture/backend/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>蓄水池抽样算法（Reservoir Sampling）</title>
      <link>https://WFUing.github.io/posts/architecture/backend/%E8%93%84%E6%B0%B4%E6%B1%A0%E6%8A%BD%E6%A0%B7%E7%AE%97%E6%B3%95/</link>
      <pubDate>Fri, 12 Apr 2024 13:53:28 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/backend/%E8%93%84%E6%B0%B4%E6%B1%A0%E6%8A%BD%E6%A0%B7%E7%AE%97%E6%B3%95/</guid>
      <description>我是在一次失败的面试经历中听说蓄水池算法的。之后上网搜了搜，知道是一个数据抽样算法，寥寥几行，却暗藏玄机。主要用来解决如下问题。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/backend/%E8%93%84%E6%B0%B4%E6%B1%A0%E6%8A%BD%E6%A0%B7%E7%AE%97%E6%B3%95/featured.png" />
    </item>
    
    <item>
      <title>前后端请求加载流程</title>
      <link>https://WFUing.github.io/posts/architecture/backend/%E5%89%8D%E5%90%8E%E7%AB%AF%E8%AF%B7%E6%B1%82%E5%8A%A0%E8%BD%BD%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Mon, 18 Mar 2024 13:53:28 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/backend/%E5%89%8D%E5%90%8E%E7%AB%AF%E8%AF%B7%E6%B1%82%E5%8A%A0%E8%BD%BD%E6%B5%81%E7%A8%8B/</guid>
      <description>前后端请求加载流程是前端与后端交互的基础，确保数据能够在客户端与服务器之间有效、安全地传输。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/backend/%E5%89%8D%E5%90%8E%E7%AB%AF%E8%AF%B7%E6%B1%82%E5%8A%A0%E8%BD%BD%E6%B5%81%E7%A8%8B/featured.png" />
    </item>
    
    <item>
      <title>VO、DTO、BO、PO、DO区别</title>
      <link>https://WFUing.github.io/posts/architecture/backend/vo-dto-bo-po-do/</link>
      <pubDate>Sat, 17 Feb 2024 16:15:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/backend/vo-dto-bo-po-do/</guid>
      <description>VO（View Object）视图对象；DTO（Data Transfer Object）数据传输对象；BO（Business Object）业务层对象；PO（Persistent Object）持久化对象；DO（Domain Object）领域对象。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://WFUing.github.io/posts/architecture/backend/vo-dto-bo-po-do/featured.png" />
    </item>
    
  </channel>
</rss>
