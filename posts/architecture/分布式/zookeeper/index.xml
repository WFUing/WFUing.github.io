<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ZooKeeper on WFUing&#39;s Blog</title>
    <link>https://WFUing.github.io/posts/architecture/%E5%88%86%E5%B8%83%E5%BC%8F/zookeeper/</link>
    <description>Recent content in ZooKeeper on WFUing&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>© 2024 WFUing</copyright>
    <lastBuildDate>Sat, 14 Oct 2023 12:00:54 +0800</lastBuildDate><atom:link href="https://WFUing.github.io/posts/architecture/%E5%88%86%E5%B8%83%E5%BC%8F/zookeeper/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Zookeeper Code</title>
      <link>https://WFUing.github.io/posts/architecture/%E5%88%86%E5%B8%83%E5%BC%8F/zookeeper/zookeeper-code/</link>
      <pubDate>Sat, 14 Oct 2023 12:00:54 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/%E5%88%86%E5%B8%83%E5%BC%8F/zookeeper/zookeeper-code/</guid>
      <description>Resources # 官方 ZooKeeper 官网 ZooKeeper 官方文档 ZooKeeper Github 博客 ZooKeeper源码阅读心得分享+源码基本结构+源码环境搭建 手摸手教你阅读和调试大型开源项目 ZooKeeper </description>
      
    </item>
    
    <item>
      <title>Zookeeper 原理</title>
      <link>https://WFUing.github.io/posts/architecture/%E5%88%86%E5%B8%83%E5%BC%8F/zookeeper/zookeeper-theory/</link>
      <pubDate>Fri, 13 Oct 2023 20:07:16 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/architecture/%E5%88%86%E5%B8%83%E5%BC%8F/zookeeper/zookeeper-theory/</guid>
      <description>ZooKeeper 简介 # ZooKeeper 是什么 # ZooKeeper 是 Apache 的顶级项目。ZooKeeper 为分布式应用提供了高效且可靠的分布式协调服务，提供了诸如统一命名服务、配置管理和分布式锁等分布式的基础服务。在解决分布式数据一致性方面，ZooKeeper 并没有直接采用 Paxos 算法，而是采用了名为 ZAB 的一致性协议。
ZooKeeper 主要用来解决分布式集群中应用系统的一致性问题，它能提供基于类似于文件系统的目录节点树方式的数据存储。但是 ZooKeeper 并不是用来专门存储数据的，它的作用主要是用来维护和监控存储数据的状态变化。通过监控这些数据状态的变化，从而可以达到基于数据的集群管理。
很多大名鼎鼎的框架都基于 ZooKeeper 来实现分布式高可用，如：Dubbo、Kafka 等。
ZooKeeper 官方支持 Java 和 C 的 Client API。ZooKeeper 社区为大多数语言（.NET，python 等）提供非官方 API。
ZooKeeper 的应用场景 # 配置管理 集群节点可以通过中心源获取启动配置 更简单的部署 分布式集群管理 节点加入/离开 节点的实时状态 命名服务，如：DNS 分布式同步：如锁、栅栏、队列 分布式系统的选主 中心化和高可靠的数据注册 ZooKeeper 的特性 # ZooKeeper 具有以下特性：</description>
      
    </item>
    
  </channel>
</rss>
