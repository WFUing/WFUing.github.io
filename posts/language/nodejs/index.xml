<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nodejs on WFUing&#39;s Blog</title>
    <link>https://WFUing.github.io/posts/language/nodejs/</link>
    <description>Recent content in nodejs on WFUing&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© 2024 WFUing</copyright>
    <lastBuildDate>Mon, 23 Oct 2023 16:19:36 +0800</lastBuildDate><atom:link href="https://WFUing.github.io/posts/language/nodejs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>timer</title>
      <link>https://WFUing.github.io/posts/language/nodejs/timer/</link>
      <pubDate>Mon, 23 Oct 2023 16:17:20 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/timer/</guid>
      <description>定时器 # process.</description>
      
    </item>
    
    <item>
      <title>fs</title>
      <link>https://WFUing.github.io/posts/language/nodejs/fs/</link>
      <pubDate>Mon, 23 Oct 2023 16:17:19 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/fs/</guid>
      <description>fs 模块 # fs.</description>
      
    </item>
    
    <item>
      <title>promise</title>
      <link>https://WFUing.github.io/posts/language/nodejs/promise/</link>
      <pubDate>Mon, 23 Oct 2023 16:17:19 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/promise/</guid>
      <description>Promise # UnhandledPromiseRejectionWarning # 如果 Promise 运行过程中抛出错误，或者状态变为rejected，但是没有相应的处理代码，那么 Node 会抛出一个警告UnhandledPromiseRejectionWarning。</description>
      
    </item>
    
    <item>
      <title>repl</title>
      <link>https://WFUing.github.io/posts/language/nodejs/repl/</link>
      <pubDate>Mon, 23 Oct 2023 16:17:19 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/repl/</guid>
      <description>Node 的 REPL 环境 # 简介 # REPL 是 read-eval-print-loop 的缩写，表示命令行下的 Node 引擎的一个互动式对话环境。用户在其中输入命令，就可以立刻看到结果。read 表示读取用户的输入，eval 表示执行，print 表示输出运行的结果，loop 表示重复执行这个过程。</description>
      
    </item>
    
  </channel>
</rss>
