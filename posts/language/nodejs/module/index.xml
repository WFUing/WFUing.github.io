<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nodejs/module on WFUing&#39;s Blog</title>
    <link>https://WFUing.github.io/posts/language/nodejs/module/</link>
    <description>Recent content in nodejs/module on WFUing&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>© 2024 WFUing</copyright>
    <lastBuildDate>Mon, 23 Oct 2023 16:16:08 +0800</lastBuildDate><atom:link href="https://WFUing.github.io/posts/language/nodejs/module/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>this.md</title>
      <link>https://WFUing.github.io/posts/language/nodejs/module/this/</link>
      <pubDate>Mon, 23 Oct 2023 16:16:08 +0800</pubDate>
      
      <guid>https://WFUing.github.io/posts/language/nodejs/module/this/</guid>
      <description>this 变量 # Node 应用的顶层变量是global，对应浏览器的window变量。
顶层的 this # 在 REPL 环境，顶层的this就指向global。
&amp;gt; global === this true 顶层变量是global和this的属性。
&amp;gt; var foo = &amp;#34;bar&amp;#34;; &amp;gt; this.foo bar &amp;gt; global.foo bar 上面代码中，foo是一个顶层变量，自动生成了this.foo和global.foo两个属性。
在模块环境，顶层的this指向当前模块，即module.exports，默认是一个空对象，与global不是同一个对象。
// 模块环境 console.log(this) // {} console.log(this === global) // false 模块内部的顶层变量，不会自动成为global和this的属性。
// 模块环境 var foo = &amp;#34;bar&amp;#34;; console.log(this.foo); // undefined console.</description>
      
    </item>
    
  </channel>
</rss>
